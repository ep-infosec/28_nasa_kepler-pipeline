#
# kepler.properties file used by AFT code 
# Used by both the Java code and the MATLAB code that it calls
#
# 
# Copyright 2017 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
# 
# This file is available under the terms of the NASA Open Source Agreement
# (NOSA). You should have received a copy of this agreement with the
# Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
# 
# No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
# WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
# INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
# WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
# INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
# FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
# TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
# CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
# OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
# OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
# FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
# REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
# AND DISTRIBUTES IT "AS IS."
#
# Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
# AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
# SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
# THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
# EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
# PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
# SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
# STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
# PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
# REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
# TERMINATION OF THIS AGREEMENT.
#

# The value of this property (aft.actualDir) is the root directory in
# which the inputs and outputs of the AFTs are stored. This includes
# copies of the log files and MATLAB runtime directories. If this
# property is not set, then the value of SOC_AFT_ROOT is used;
# otherwise /path/to/aft is used.
#aft.actualDir=/path/to/aft

# The value of this property (aft.etemDir) is the root directory of
# the etem outputs. If this property is not set, then
# /path/to/aft/etem/test.descriptor/etem is used.
#aft.etemDir=/path/to/etem

# The value of this property (aft.existingHsqldb) is used to specify
# the URI of an existing HSQLDB if aft.useExistingHsqldb is true.
#aft.existingHsqldb=

# The value of this property (aft.fs.data.seed.dir) is the root
# directory of an existing filestore that is used to seed the
# filestore.
#aft.fs.data.seed.dir=

# The value of this property (aft.localDataDir) is the root of the
# data repo. If this property is not set, then the value of
# SOC_DATA_ROOT is used; otherwise /path/to/rec is used.
#aft.localDataDir=/path/to/data

# Controls whether or not the datastore is to be seeded. Setting this
# property to false is useful for debugging and for re-running a test
# with a previously seeded datastore. The default value is true.
#aft.seedingEnabled=true

# Controls whether or not aft.existingHsqldb is to be used. The
# default value is false.
#aft.useExistingHsqldb=false

# The value of this property (test.descriptor) is the current test
# data set descriptor. If this property is not set, then BASIC is
# used.
#test.descriptor=BASIC

# If true, update local dist/mbin MATLAB executables from 
# /path/to/releases/soc/latest-artifacts-SUCCESS/dist.
# This is not suggested since it makes it possible for the Java
# and MATLAB code to get out of sync.
aft.refresh.mbin=false

# The following properties control where the fc model importer gets the model
# seed data.  These paths should be changed to point at the data repo directory
# structure on flux.

# Properties for the FC importer.
# Uncomment this to read the FC models from a different location. 
# The default value is /path/to/rec/so. 
#fc.importer.rootdir=/path/to/rootdir
fc.importer.geometry=path/to/model
fc.importer.pointing=path/to/model
fc.importer.roll-time=path/to/model
fc.importer.prf=path/to/model
fc.importer.small-flat=path/to/model
fc.importer.large-flat=path/to/model
fc.importer.two-d-black=path/to/model
fc.importer.gain=path/to/model
fc.importer.linearity=path/to/model
fc.importer.read-noise=path/to/model
fc.importer.invalid-pixels=path/to/model
fc.importer.undershoot=path/to/model

process.statusReportIntervalMillis=5000
services.process.statusBroadcaster.enabled=false

# dr props
dr.filewatcher.incoming.dir=/path/to/incoming
dr.filewatcher.processing.root.dir=/path/to/processing
dr.filewatcher.sleepTimeSecs=10
dr.notification.skipChecksum=true
dr.dispatcher.pixel.storeFitsHeaders=false

pi.worker.binDir=${kepler.config.dir}/../../../dist/bin
pi.worker.numTaskThreads=1
pi.worker.module.xmlDir=../../dist/xml

# MATLAB 2007a
#pi.worker.moduleExe.mcrRoot=/path/to/mcr
#pi.worker.moduleExe.libPath=${pi.worker.moduleExe.mcrRoot}/runtime/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/os/glnxa64:${pi.worker.moduleExe.mcrRoot}/bin/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre1.5.0/lib/amd64/server/:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre1.5.0/lib/amd64/:../mbin

# MATLAB 2010b
pi.worker.moduleExe.mcrRoot=/path/to/mcr
pi.worker.moduleExe.libPath=${pi.worker.moduleExe.mcrRoot}/runtime/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/os/glnxa64:${pi.worker.moduleExe.mcrRoot}/bin/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/server/:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/:../mbin

# Mac Intel 2007a
#pi.worker.moduleExe.libPath.mac_os_x=${pi.worker.moduleExe.mcrRoot}/runtime/maci:${pi.worker.moduleExe.mcrRoot}/sys/os/maci:${pi.worker.moduleExe.mcrRoot}/bin/maci:/System/Library/Frameworks/JavaVM.framework/JavaVM:/System/Library/Frameworks/JavaVM.framework/Libraries:../mbin

# Mac Intel 2010b 64bit
pi.worker.moduleExe.libPath.mac_os_x=${pi.worker.moduleExe.mcrRoot}/runtime/maci64:${pi.worker.moduleExe.mcrRoot}/bin/maci64:${pi.worker.moduleExe.mcrRoot}/sys/os/maci64

pi.worker.moduleExe.binDir=../../dist/mbin
pi.worker.moduleExe.dataDir=../../dist/tmp
pi.worker.moduleExe.workingDir=../../dist/tmp

pi.worker.moduleExe.saveMatFiles=true

# this one is relative to pi.worker.moduleExe.workingDir/matlab-x-x
# since it is read from the MATLAB side
matlab.log4j.config=../../etc/log4j.xml

# Directory that contains the Spice files. (relative to
# pi.worker.moduleExe.workingDir/matlab-x-x)
fc.spiceFilesDir=${kepler.config.dir}/../../../dist/cache/spice

# Alternate Java runtime
# pi.worker.moduleExe.matlabJava=/usr/java/jdk1.6.0._07

# Directory that contains database seed data files
seedData.dir=../../dist/seed-data

# transaction properties
transactions.xa.timeout-seconds=259200
#transactions.xa=false

# Cluster broker - ActiveMQ
jms.url=vm://activemq

# File Store

# Local file store config (for dev/testing purposes only)

# Change the following to "fstp" in order to communicate with a remote
# file store server.
fs.auto-rollback-seconds=86400
fs.data.dir=/path/to/filestore
fs.driver.name=fstp
fs.fstp=fstp://host:port
fs.listen-port=port
fs.server.sync-on-recovery=false

# General (database independent) Hibernate props

hibernate.show_sql=false
hibernate.format_sql=true
hibernate.use_sql_comments=true

# HSQLDB Hibernate props

# HSQLDB - network

hibernate.connection.driver_class=org.hsqldb.jdbcDriver
hibernate.connection.url=jdbc:hsqldb:hsql://host:port/db
hibernate.connection.username=username
hibernate.dialect=org.hibernate.dialect.HSQLDialect
hibernate.jdbc.batch_size=0
hsqldb.server.port=9002
