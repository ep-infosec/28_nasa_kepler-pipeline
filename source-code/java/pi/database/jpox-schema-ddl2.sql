--
-- Copyright 2017 United States Government as represented by the
-- Administrator of the National Aeronautics and Space Administration.
-- All Rights Reserved.
-- 
-- This file is available under the terms of the NASA Open Source Agreement
-- (NOSA). You should have received a copy of this agreement with the
-- Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
-- 
-- No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
-- WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
-- INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
-- WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
-- INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
-- FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
-- TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
-- CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
-- OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
-- OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
-- FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
-- REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
-- AND DISTRIBUTES IT "AS IS."
--
-- Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
-- AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
-- SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
-- THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
-- EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
-- PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
-- SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
-- STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
-- PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
-- REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
-- TERMINATION OF THIS AGREEMENT.
--
CREATE TABLE JPOX_TABLES
(
    CLASS_NAME VARCHAR2(128) NOT NULL UNIQUE,
    "TABLE_NAME" VARCHAR2(128) NOT NULL,
    "TYPE" VARCHAR2(4) NOT NULL,
    OWNER VARCHAR2(2) NOT NULL,
    VERSION VARCHAR2(20) NOT NULL
);

CREATE TABLE ACTIVE_DR_PIPELINE
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    PIPELINE_ID NUMBER NULL
);

ALTER TABLE ACTIVE_DR_PIPELINE ADD CONSTRAINT ACTIVE_DR_PIPELINE_PK PRIMARY KEY (ID);

CREATE TABLE DATASET_TYPE
(
    SHORT_NAME VARCHAR2(100) NOT NULL,
    CATEGORY VARCHAR2(100) NULL,
    DISPLAY_NAME VARCHAR2(100) NULL
);

ALTER TABLE DATASET_TYPE ADD CONSTRAINT DATASET_TYPE_PK PRIMARY KEY (SHORT_NAME);

CREATE TABLE MODULEPARAMETERSET_PARAMETERS
(
    ID_OID NUMBER NOT NULL,
    STRING_KEY VARCHAR2(255) NOT NULL,
    STRING_VAL VARCHAR2(255) NULL
);

ALTER TABLE MODULEPARAMETERSET_PARAMETERS ADD CONSTRAINT MODULEPARAMETERSET_PARAMJ3_PK PRIMARY KEY (ID_OID,STRING_KEY);

CREATE TABLE PIPELINE_DATASET
(
    ID NUMBER NOT NULL,
    CADENCE_END NUMBER(10) NOT NULL,
    CADENCE_START NUMBER(10) NOT NULL,
    CREATED TIMESTAMP NULL,
    DATASET_TYPE_ID VARCHAR2(100) NULL,
    PI_ID NUMBER NULL
);

ALTER TABLE PIPELINE_DATASET ADD CONSTRAINT PIPELINE_DATASET_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_DEF
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    DEFAULT_INPUT_DATASET VARCHAR2(100) NULL,
    DEFAULT_OUTPUT_DATASET VARCHAR2(100) NULL,
    DESCRIPTION VARCHAR2(1000) NULL,
    "NAME" VARCHAR2(100) NULL,
    READ_ONLY NUMBER(1) NOT NULL CHECK (READ_ONLY IN ('1','0')),
    ROOT_NODE_ID NUMBER NULL,
    UOW_CONFIG_UOW_CONFIG_IDMR NUMBER NULL
);

ALTER TABLE PIPELINE_DEF ADD CONSTRAINT PIPELINE_DEF_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_DEF_NODE
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    MODULE_ID NUMBER NULL
);

ALTER TABLE PIPELINE_DEF_NODE ADD CONSTRAINT PIPELINE_DEF_NODE_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_INSTANCE
(
    ID NUMBER NOT NULL,
    CADENCE_END NUMBER(10) NOT NULL,
    CADENCE_START NUMBER(10) NOT NULL,
    CHECK_EXISTING_OUTPUTS NUMBER(1) NOT NULL CHECK (CHECK_EXISTING_OUTPUTS IN ('1','0')),
    CREATED TIMESTAMP NULL,
    INPUT_DATASET VARCHAR2(100) NULL,
    OUTPUT_DATASET VARCHAR2(100) NULL,
    PIPELINE_ID NUMBER NULL,
    PRIORITY NUMBER(10) NOT NULL,
    "STATE" NUMBER(10) NOT NULL
);

ALTER TABLE PIPELINE_INSTANCE ADD CONSTRAINT PIPELINE_INSTANCE_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_MODULE
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    DESCRIPTION VARCHAR2(1000) NULL,
    IMPLEMENTING_CLASS_NAME VARCHAR2(100) NULL,
    "NAME" VARCHAR2(100) NULL,
    MODULE_PSET_ID NUMBER NULL,
    READ_ONLY NUMBER(1) NOT NULL CHECK (READ_ONLY IN ('1','0')),
    VERSION VARCHAR2(100) NULL
);

ALTER TABLE PIPELINE_MODULE ADD CONSTRAINT PIPELINE_MODULE_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_MODULE_PSET
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    DESCRIPTION VARCHAR2(1000) NULL,
    "NAME" VARCHAR2(100) NULL,
    VERSION VARCHAR2(100) NULL
);

ALTER TABLE PIPELINE_MODULE_PSET ADD CONSTRAINT PIPELINE_MODULE_PSET_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_NODE_MAP
(
    PN_OWNER_ID NUMBER NOT NULL,
    PN_NEXT_ID NUMBER NULL,
    ORDER_INDEX NUMBER(10) NOT NULL
);

ALTER TABLE PIPELINE_NODE_MAP ADD CONSTRAINT PIPELINE_NODE_MAP_PK PRIMARY KEY (PN_OWNER_ID,ORDER_INDEX);

CREATE TABLE PIPELINE_ROLE
(
    "NAME" VARCHAR2(255) NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL
);

ALTER TABLE PIPELINE_ROLE ADD CONSTRAINT PIPELINE_ROLE_PK PRIMARY KEY ("NAME");

CREATE TABLE PIPELINE_ROLE_PRIV_MAP
(
    PR_ID VARCHAR2(255) NOT NULL,
    PRIVILEGE VARCHAR2(255) NULL,
    ORDER_INDEX NUMBER(10) NOT NULL
);

ALTER TABLE PIPELINE_ROLE_PRIV_MAP ADD CONSTRAINT PIPELINE_ROLE_PRIV_MAP_PK PRIMARY KEY (PR_ID,ORDER_INDEX);

CREATE TABLE PIPELINE_TASK
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    PI_ID NUMBER NULL,
    PN_ID NUMBER NULL,
    "STATE" NUMBER(10) NOT NULL,
    UNIT_OF_WORK_UOW_TASK_IDMR NUMBER NULL
);

ALTER TABLE PIPELINE_TASK ADD CONSTRAINT PIPELINE_TASK_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_TRIGGER
(
    ID NUMBER NOT NULL,
    CADENCE_END NUMBER(10) NOT NULL,
    CADENCE_START NUMBER(10) NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    FIRED NUMBER(1) NOT NULL CHECK (FIRED IN ('1','0')),
    INPUT_DATASET VARCHAR2(100) NULL,
    INSTANCE_PRIORITY NUMBER(10) NOT NULL,
    "NAME" VARCHAR2(100) NULL,
    OUTPUT_DATASET VARCHAR2(100) NULL,
    PIPELINE_ID NUMBER NULL,
    PI_ID NUMBER NULL,
    "TYPE" VARCHAR2(100) NOT NULL
);

ALTER TABLE PIPELINE_TRIGGER ADD CONSTRAINT PIPELINE_TRIGGER_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_USER
(
    ID NUMBER NOT NULL,
    CREATED TIMESTAMP NULL,
    CREATED_BY_ID_OID NUMBER NULL,
    DISPLAY_NAME VARCHAR2(20) NULL,
    EMAIL VARCHAR2(50) NULL,
    LOGIN_NAME VARCHAR2(10) NULL,
    PASSWORD VARCHAR2(50) NULL,
    PHONE VARCHAR2(20) NULL
);

ALTER TABLE PIPELINE_USER ADD CONSTRAINT PIPELINE_USER_PK PRIMARY KEY (ID);

CREATE TABLE PIPELINE_USER_PRIV_MAP
(
    PU_ID NUMBER NOT NULL,
    PRIVILEGE VARCHAR2(255) NULL,
    ORDER_INDEX NUMBER(10) NOT NULL
);

ALTER TABLE PIPELINE_USER_PRIV_MAP ADD CONSTRAINT PIPELINE_USER_PRIV_MAP_PK PRIMARY KEY (PU_ID,ORDER_INDEX);

CREATE TABLE PIPELINE_USER_ROLE_MAP
(
    PU_ID NUMBER NOT NULL,
    PR_ID VARCHAR2(255) NULL,
    ORDER_INDEX NUMBER(10) NOT NULL
);

ALTER TABLE PIPELINE_USER_ROLE_MAP ADD CONSTRAINT PIPELINE_USER_ROLE_MAP_PK PRIMARY KEY (PU_ID,ORDER_INDEX);

CREATE TABLE TASK_TARGET_MAP
(
    TASK_ID NUMBER NOT NULL,
    TARGET_ID NUMBER NULL,
    ORDER_INDEX NUMBER(10) NOT NULL
);

ALTER TABLE TASK_TARGET_MAP ADD CONSTRAINT TASK_TARGET_MAP_PK PRIMARY KEY (TASK_ID,ORDER_INDEX);

CREATE TABLE UOW_CONFIG
(
    UOW_CONFIG_ID NUMBER NOT NULL,
    BIN_CADENCE_QUARTERLY NUMBER(1) NOT NULL CHECK (BIN_CADENCE_QUARTERLY IN ('1','0')),
    BIN_TYPE NUMBER(10) NOT NULL,
    CADENCE_BIN_SIZE NUMBER(10) NOT NULL,
    TARGET_BIN_SIZE NUMBER(10) NOT NULL
);

ALTER TABLE UOW_CONFIG ADD CONSTRAINT UOW_CONFIG_PK PRIMARY KEY (UOW_CONFIG_ID);

CREATE TABLE UOW_TASK
(
    UOW_TASK_ID NUMBER NOT NULL,
    CADENCE_END NUMBER(10) NOT NULL,
    CADENCE_START NUMBER(10) NOT NULL,
    CCD_MODULE NUMBER(10) NOT NULL,
    CCD_OUTPUT NUMBER(10) NOT NULL
);

ALTER TABLE UOW_TASK ADD CONSTRAINT UOW_TASK_PK PRIMARY KEY (UOW_TASK_ID);

CREATE TABLE UOW_TASK_TARGET
(
    UOW_TASK_TARGET_ID NUMBER NOT NULL,
    KEPLER_ID NUMBER NOT NULL
);

ALTER TABLE UOW_TASK_TARGET ADD CONSTRAINT UOW_TASK_TARGET_PK PRIMARY KEY (UOW_TASK_TARGET_ID);

ALTER TABLE ACTIVE_DR_PIPELINE ADD CONSTRAINT ACTIVE_DR_PIPELINE_FK1 FOREIGN KEY (PIPELINE_ID) REFERENCES PIPELINE_DEF (ID) INITIALLY DEFERRED ;

CREATE INDEX ACTIVE_DR_PIPELINE_N49 ON ACTIVE_DR_PIPELINE (PIPELINE_ID);

ALTER TABLE MODULEPARAMETERSET_PARAMETERS ADD CONSTRAINT MODULEPARAMETERSET_PARAMJ3_FK1 FOREIGN KEY (ID_OID) REFERENCES PIPELINE_MODULE_PSET (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_DATASET ADD CONSTRAINT PIPELINE_DATASET_FK1 FOREIGN KEY (PI_ID) REFERENCES PIPELINE_INSTANCE (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_DATASET_N49 ON PIPELINE_DATASET (PI_ID);

ALTER TABLE PIPELINE_DEF ADD CONSTRAINT PIPELINE_DEF_FK2 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_DEF ADD CONSTRAINT PIPELINE_DEF_FK3 FOREIGN KEY (ROOT_NODE_ID) REFERENCES PIPELINE_DEF_NODE (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_DEF ADD CONSTRAINT PIPELINE_DEF_FK1 FOREIGN KEY (UOW_CONFIG_UOW_CONFIG_IDMR) REFERENCES UOW_CONFIG (UOW_CONFIG_ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_DEF_N51 ON PIPELINE_DEF (CREATED_BY_ID_OID);

CREATE INDEX PIPELINE_DEF_N50 ON PIPELINE_DEF (UOW_CONFIG_UOW_CONFIG_IDMR);

CREATE INDEX PIPELINE_DEF_N49 ON PIPELINE_DEF (ROOT_NODE_ID);

ALTER TABLE PIPELINE_DEF_NODE ADD CONSTRAINT PIPELINE_DEF_NODE_FK1 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_DEF_NODE ADD CONSTRAINT PIPELINE_DEF_NODE_FK2 FOREIGN KEY (MODULE_ID) REFERENCES PIPELINE_MODULE (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_DEF_NODE_N49 ON PIPELINE_DEF_NODE (CREATED_BY_ID_OID);

CREATE INDEX PIPELINE_DEF_NODE_N50 ON PIPELINE_DEF_NODE (MODULE_ID);

ALTER TABLE PIPELINE_INSTANCE ADD CONSTRAINT PIPELINE_INSTANCE_FK1 FOREIGN KEY (PIPELINE_ID) REFERENCES PIPELINE_DEF (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_INSTANCE_N49 ON PIPELINE_INSTANCE (PIPELINE_ID);

ALTER TABLE PIPELINE_MODULE ADD CONSTRAINT PIPELINE_MODULE_FK2 FOREIGN KEY (MODULE_PSET_ID) REFERENCES PIPELINE_MODULE_PSET (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_MODULE ADD CONSTRAINT PIPELINE_MODULE_FK1 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_MODULE_N49 ON PIPELINE_MODULE (CREATED_BY_ID_OID);

CREATE INDEX PIPELINE_MODULE_N50 ON PIPELINE_MODULE (MODULE_PSET_ID);

ALTER TABLE PIPELINE_MODULE_PSET ADD CONSTRAINT PIPELINE_MODULE_PSET_FK1 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_MODULE_PSET_N49 ON PIPELINE_MODULE_PSET (CREATED_BY_ID_OID);

ALTER TABLE PIPELINE_NODE_MAP ADD CONSTRAINT PIPELINE_NODE_MAP_FK1 FOREIGN KEY (PN_OWNER_ID) REFERENCES PIPELINE_DEF_NODE (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_NODE_MAP ADD CONSTRAINT PIPELINE_NODE_MAP_FK2 FOREIGN KEY (PN_NEXT_ID) REFERENCES PIPELINE_DEF_NODE (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_NODE_MAP_N49 ON PIPELINE_NODE_MAP (PN_NEXT_ID);

ALTER TABLE PIPELINE_ROLE ADD CONSTRAINT PIPELINE_ROLE_FK1 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_ROLE_N49 ON PIPELINE_ROLE (CREATED_BY_ID_OID);

ALTER TABLE PIPELINE_ROLE_PRIV_MAP ADD CONSTRAINT PIPELINE_ROLE_PRIV_MAP_FK1 FOREIGN KEY (PR_ID) REFERENCES PIPELINE_ROLE ("NAME") INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_TASK ADD CONSTRAINT PIPELINE_TASK_FK2 FOREIGN KEY (UNIT_OF_WORK_UOW_TASK_IDMR) REFERENCES UOW_TASK (UOW_TASK_ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_TASK ADD CONSTRAINT PIPELINE_TASK_FK1 FOREIGN KEY (PI_ID) REFERENCES PIPELINE_INSTANCE (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_TASK ADD CONSTRAINT PIPELINE_TASK_FK3 FOREIGN KEY (PN_ID) REFERENCES PIPELINE_DEF_NODE (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_TASK_N51 ON PIPELINE_TASK (UNIT_OF_WORK_UOW_TASK_IDMR);

CREATE INDEX PIPELINE_TASK_N50 ON PIPELINE_TASK (PI_ID);

CREATE INDEX PIPELINE_TASK_N49 ON PIPELINE_TASK (PN_ID);

ALTER TABLE PIPELINE_TRIGGER ADD CONSTRAINT PIPELINE_TRIGGER_FK2 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_TRIGGER ADD CONSTRAINT PIPELINE_TRIGGER_FK1 FOREIGN KEY (PIPELINE_ID) REFERENCES PIPELINE_DEF (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_TRIGGER ADD CONSTRAINT PIPELINE_TRIGGER_FK3 FOREIGN KEY (PI_ID) REFERENCES PIPELINE_INSTANCE (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_TRIGGER_N51 ON PIPELINE_TRIGGER (CREATED_BY_ID_OID);

CREATE INDEX PIPELINE_TRIGGER_N49 ON PIPELINE_TRIGGER (PI_ID);

CREATE INDEX PIPELINE_TRIGGER_N50 ON PIPELINE_TRIGGER (PIPELINE_ID);

ALTER TABLE PIPELINE_USER ADD CONSTRAINT PIPELINE_USER_FK1 FOREIGN KEY (CREATED_BY_ID_OID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_USER_N49 ON PIPELINE_USER (CREATED_BY_ID_OID);

ALTER TABLE PIPELINE_USER_PRIV_MAP ADD CONSTRAINT PIPELINE_USER_PRIV_MAP_FK1 FOREIGN KEY (PU_ID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_USER_ROLE_MAP ADD CONSTRAINT PIPELINE_USER_ROLE_MAP_FK1 FOREIGN KEY (PU_ID) REFERENCES PIPELINE_USER (ID) INITIALLY DEFERRED ;

ALTER TABLE PIPELINE_USER_ROLE_MAP ADD CONSTRAINT PIPELINE_USER_ROLE_MAP_FK2 FOREIGN KEY (PR_ID) REFERENCES PIPELINE_ROLE ("NAME") INITIALLY DEFERRED ;

CREATE INDEX PIPELINE_USER_ROLE_MAP_N49 ON PIPELINE_USER_ROLE_MAP (PR_ID);

ALTER TABLE TASK_TARGET_MAP ADD CONSTRAINT TASK_TARGET_MAP_FK2 FOREIGN KEY (TARGET_ID) REFERENCES UOW_TASK_TARGET (UOW_TASK_TARGET_ID) INITIALLY DEFERRED ;

ALTER TABLE TASK_TARGET_MAP ADD CONSTRAINT TASK_TARGET_MAP_FK1 FOREIGN KEY (TASK_ID) REFERENCES UOW_TASK (UOW_TASK_ID) INITIALLY DEFERRED ;

CREATE INDEX TASK_TARGET_MAP_N49 ON TASK_TARGET_MAP (TARGET_ID);

