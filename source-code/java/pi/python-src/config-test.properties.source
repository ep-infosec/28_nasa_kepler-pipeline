
#
# Properties file for SOC processes
#
# Lookup order for properties is as follows:
# 1- System properties ( System.getProperty() )
# 2- Properties file (this file)
# 3- Database properties (KEY_VALUE_PAIRS table)
#
# Most of the properties here should eventually migrate to Oracle
# leaving only the jdbc connection info
# 
# Copyright 2017 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
# 
# This file is available under the terms of the NASA Open Source Agreement
# (NOSA). You should have received a copy of this agreement with the
# Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
# 
# No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
# WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
# INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
# WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
# INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
# FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
# TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
# CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
# OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
# OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
# FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
# REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
# AND DISTRIBUTES IT "AS IS."
#
# Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
# AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
# SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
# THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
# EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
# PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
# SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
# STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
# PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
# REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
# TERMINATION OF THIS AGREEMENT.
#

kepler.dev.dir=/path/to/dev

services.statusReport.process.reportIntervalMillis=15000
services.statusReport.metrics.reportIntervalMillis=60000
services.statusReport.workerThread.reportIntervalMillis=15000

# KSOC-specific properties
ksoc.gar.allowIncompleteExportSet=true

# Props read by DataReceiptProcess

dr.filewatcher.incoming.dir=${kepler.dev.dir}/dr/working/incoming
dr.filewatcher.processing.root.dir=${kepler.dev.dir}/dr/working/processing
dr.filewatcher.sleepTimeSecs=10
#dr.notification.skipChecksum=false
#dr.dispatcher.pixel.commissioningMode=true

pi.worker.numTaskThreads=4
pi.worker.module.xmlDir=${kepler.config.dir}/../xml

pi.worker.taskMetrics.categories=Filestore,Commit,Framework,Algorithm,MatIO
pi.worker.taskMetrics.Filestore=fs.client.
pi.worker.taskMetrics.Commit=pipeline.module.commitTime
pi.worker.taskMetrics.Framework=pipeline.module.executeAlgorithm.java.serializationTime,pipeline.module.executeAlgorithm.matlab.serializationTime
pi.worker.taskMetrics.MatIO=pipeline.module.executeAlgorithm.matlab.readWriteMatfilesTime
pi.worker.taskMetrics.Algorithm=pipeline.module.executeAlgorithm.matlab.controller.execTime

# For use on NAS/Pleiades
pi.remote.dist.dir=/path/to/dist
pi.remote.statefile.dir=/path/to/state
pi.remote.taskfile.dir=/path/to/taskfiles
pi.remote.proxy.statefile.dir=/path/to/state
pi.remote.proxy.taskfile.dir=/path/to/taskfiles
pi.remote.proxy.host=host
pi.remote.proxy.user=user

# for testing on devworker4,5
#pi.remote.dist.dir=/path/to/dist
#pi.remote.statefile.dir=/path/to/state
#pi.remote.taskfile.dir=/path/to/taskfiles
#pi.remote.proxy.statefile.dir=/path/to/state
#pi.remote.proxy.taskfile.dir=/path/to/taskfiles
#pi.remote.proxy.host=host
#pi.remote.proxy.user=user

# MATLAB 2007a
#pi.worker.moduleExe.mcrRoot=/path/to/mcr
#pi.worker.moduleExe.libPath=${pi.worker.moduleExe.mcrRoot}/runtime/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/os/glnxa64:${pi.worker.moduleExe.mcrRoot}/bin/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre1.5.0/lib/amd64/server/:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre1.5.0/lib/amd64/:../mbin

# MATLAB 2010b
pi.worker.moduleExe.mcrRoot=/path/to/mcr
pi.worker.moduleExe.libPath=${pi.worker.moduleExe.mcrRoot}/runtime/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/os/glnxa64:${pi.worker.moduleExe.mcrRoot}/bin/glnxa64:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/server/:${pi.worker.moduleExe.mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/:../mbin

# Mac Intel 2007a
#pi.worker.moduleExe.libPath.mac_os_x=${pi.worker.moduleExe.mcrRoot}/runtime/maci:${pi.worker.moduleExe.mcrRoot}/sys/os/maci:${pi.worker.moduleExe.mcrRoot}/bin/maci:/System/Library/Frameworks/JavaVM.framework/JavaVM:/System/Library/Frameworks/JavaVM.framework/Libraries:../mbin

# Mac Intel 2010b 64bit
pi.worker.moduleExe.libPath.mac_os_x=${pi.worker.moduleExe.mcrRoot}/runtime/maci64:${pi.worker.moduleExe.mcrRoot}/bin/maci64:${pi.worker.moduleExe.mcrRoot}/sys/os/maci64

pi.worker.moduleExe.binDir=${kepler.config.dir}/../mbin
pi.worker.moduleExe.saveMatFiles=true
pi.worker.moduleExe.workingDir=${kepler.dev.dir}/task-data
pi.worker.moduleExe.dataDir=${kepler.dev.dir}/task-data
pi.worker.taskLogDir=${kepler.dev.dir}/logs/tasks
pi.worker.binDir=${kepler.config.dir}/../bin

pi.metrics.reaper.checkIntervalMins=5
pi.metrics.reaper.maxRows=10000

matlab.log4j.config=${kepler.config.dir}/../etc/log4j.xml
matlab.log4j.initialize=true

# Directory that contains the Spice files.
fc.spice.devMode=true
fc.spiceFilesDir=${kepler.dev.dir}/cache/spice

# Root and subdirectores that contain the fc importer data
fc.importer.rootdir=/path/to/rootdir
fc.importer.geometry=path/to/model
fc.importer.pointing=path/to/model
fc.importer.roll-time=path/to/model
fc.importer.prf=path/to/model
fc.importer.small-flat=path/to/model
fc.importer.large-flat=path/to/model
fc.importer.two-d-black=path/to/model
fc.importer.gain=path/to/model
fc.importer.linearity=path/to/model
fc.importer.read-noise=path/to/model
fc.importer.invalid-pixels=path/to/model
fc.importer.undershoot=path/to/model


# Directory that contains database seed data files
seedData.dir=${kepler.config.dir}/../seed-data

# transaction properties
transactions.xa.timeout-seconds=259200
transactions.xa.object-store=${kepler.config.dir}/../transactionManagerObjectStore
#transactions.xa=false
pi.worker.xaEnabled=false

# Cluster broker - ActiveMQ
jms.url=failover:tcp://host:port?wireFormat.maxInactivityDuration=0
#The following will disable the jms messages
#services.process.statusBroadcaster.enabled=false
# File Store

# Local file store config (for dev/testing purposes only)
fs.data.dir=/path/to/filestore
#fs.data.dir=/path/to/filestore

# Change the following to "fstp" in order to communicate with a remote
# file store server.
fs.driver.name=fstp
fs.fstp=fstp://host:port
fs.auto-rollback-seconds=86400
fs.listen-port=port

# Settings for mr testing.
#loading-hardlink-linux-library-crashes-vm=true
# When using SeedTestDb.
#fs.driver.name=local
#fs.data.dir=/path/to/filestore
# When using AFTs + SeedAftDb.
#fs.driver.name=disk
#fs.disk-fs.read-root=/path/to/read-root

# Database Service Properties

# General (database independent) Hibernate props

hibernate.show_sql=false
hibernate.format_sql=true
hibernate.use_sql_comments=false

# HSQLDB props

hibernate.connection.driver_class=org.hsqldb.jdbcDriver

# when running HSQLDB with dist/bin/hsqldb
hibernate.connection.url=jdbc:hsqldb:hsql://host:port/db
# when running HSQLDB from hibernate
#hibernate.connection.url=jdbc:hsqldb:hsql://host:port/db
# when running HSQLDB from systest (AFTs)
#hibernate.connection.url=jdbc:hsqldb:hsql://host:port/db

hibernate.connection.username=username
hibernate.connection.password=password
hibernate.dialect=org.hibernate.dialect.HSQLDialect
hibernate.jdbc.batch_size=0

# Oracle props

#hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver
#hibernate.connection.url=jdbc:oracle:thin:@host:port:db
#hibernate.connection.username=username
#hibernate.connection.password=password
#hibernate.dialect=org.hibernate.dialect.OracleDialect

