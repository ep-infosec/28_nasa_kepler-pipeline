/*
 * Copyright 2017 United States Government as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 * 
 * This file is available under the terms of the NASA Open Source Agreement
 * (NOSA). You should have received a copy of this agreement with the
 * Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
 * 
 * No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
 * WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
 * INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
 * WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
 * INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
 * FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
 * TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
 * CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
 * OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
 * OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
 * FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
 * REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
 * AND DISTRIBUTES IT "AS IS."
 * 
 * Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
 * AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
 * SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
 * THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
 * EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
 * PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
 * SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
 * STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
 * PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
 * REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
 * TERMINATION OF THIS AGREEMENT.
 */

package gov.nasa.kepler.common;

/**
 * Constants used for target management.
 * 
 * @author Miles Cote
 * @author Bill Wohler
 */
public class TargetManagementConstants {
    public static final int MAX_LONG_CADENCE_TARGET_DEFS = 170000;
    public static final int MAX_SHORT_CADENCE_TARGET_DEFS = 512;
    public static final int MAX_REFERENCE_PIXEL_TARGET_DEFS = 3000;
    public static final int MAX_LONG_CADENCE_PIXELS = 5440000; // 32 * 170,000
    public static final int MAX_SHORT_CADENCE_PIXELS = 43520; // 85 * 512
    public static final int MAX_REFERENCE_PIXEL_PIXELS = 255000;
    // TODO replace MAX_VALUE with what?
    public static final int MAX_BG_TARGET_DEFS_PER_CHANNEL = Integer.MAX_VALUE;
    public static final int MAX_TARGET_DEFS_PER_CHANNEL = 16383;
    public static final int MAX_BACKGROUND_APERTURES = 1024;
    public static final int MAX_TARGET_APERTURES = 1024;
    public static final int MAX_TOTAL_APERTURE_OFFSETS = 1024 * 85; // 87,040

    public static final int INVALID_KEPLER_ID = -1;

    public static final int CUSTOM_TARGET_KEPLER_ID_START = 100000000;
    public static final int CUSTOM_TARGET_KEPLER_ID_END = 200999999;
    public static final int INVALID_SKY_GROUP_ID = -1;
    public static final int MIN_SKY_GROUP_ID = 1;
    public static final int MAX_SKY_GROUP_ID = 84;

    public static final int RPTS_MASKS_PER_CHANNEL = 3;

    public static boolean isCustomTarget(int keplerId) {
        return keplerId >= CUSTOM_TARGET_KEPLER_ID_START
            && keplerId <= CUSTOM_TARGET_KEPLER_ID_END;
    }

    public static boolean isCatalogTarget(int keplerId) {
        return keplerId != INVALID_KEPLER_ID
            && (keplerId < CUSTOM_TARGET_KEPLER_ID_START || keplerId > CUSTOM_TARGET_KEPLER_ID_END);
    }
}
