/*
 * Copyright 2017 United States Government as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 * 
 * This file is available under the terms of the NASA Open Source Agreement
 * (NOSA). You should have received a copy of this agreement with the
 * Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
 * 
 * No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
 * WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
 * INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
 * WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
 * INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
 * FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
 * TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
 * CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
 * OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
 * OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
 * FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
 * REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
 * AND DISTRIBUTES IT "AS IS."
 * 
 * Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
 * AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
 * SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
 * THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
 * EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
 * PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
 * SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
 * STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
 * PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
 * REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
 * TERMINATION OF THIS AGREEMENT.
 */

package gov.nasa.kepler.hibernate.tad;

import gov.nasa.spiffy.common.collect.Pair;

import java.util.List;

import com.google.common.collect.ImmutableList;

/**
 * Actually this is 16 Cyg.  This class is a hack to get the correct aperture
 * in for 16 Cyg during export time.
 * 
 * @author Sean McCauliff
 *
 */
public class Cyg16 {

	static final int Q6_M1_KEPLER_ID = 100002400;
    static final int Q6_M2_KEPLER_ID = 100002402;
    static final int Q6_M3_KEPLER_ID = 100002404;
    

    public boolean is16Cyg(int keplerId) {
        return 
            keplerId == Q6_M1_KEPLER_ID ||
            keplerId == Q6_M2_KEPLER_ID ||
            keplerId == Q6_M3_KEPLER_ID;
    }
    
    /**
     * 
     * @param keplerId
     * @return the target definition returned is probably not sufficiently
     * defined to be inserted into the database.  Please do not do that.
     * This is here to make the exports work.
     */
    public TargetDefinition targetDefinitionFor(int keplerId) {
        if (keplerId == Q6_M1_KEPLER_ID) {
            return targetDefinitionFrom(referencePixelQ6Month1(), apertureOffsetsQ6Month1());
        } else if (keplerId == Q6_M2_KEPLER_ID) {
            return targetDefinitionFrom(referencePixelQ6M2(), apertureOffsetsQ6Month2());
        } else if (keplerId == Q6_M3_KEPLER_ID) {
            return targetDefinitionFrom(referencePixelQ6M3(), apertureOffsetsQ6Month3());
        }
        throw new IllegalArgumentException("Target with kepler id " + keplerId + " is not 16 Cyg.");
    }
    
    private TargetDefinition targetDefinitionFrom(Pair<Integer, Integer> referencePixel, List<Offset> offsets) {
        Mask mask = new Mask(null, offsets);
        TargetDefinition targetDefinition = new TargetDefinition(referencePixel.left, referencePixel.right, 0, mask);
        return targetDefinition;
    }
    
    
    /*
     * scala> plannedTarget.getAperture.getReferenceRow
res0: Int = 922

scala> plannedTarget.getAperture.getReference
getReferenceColumn   getReferenceRow      

scala> plannedTarget.getAperture.getReferenceColumn
res1: Int = 563


     */
    public Pair<Integer, Integer> referencePixelQ6M3() {
        return Pair.of(922, 563);
    }
    
    public Pair<Integer, Integer> referencePixelFor(int keplerId) {
    	switch (keplerId) {
    	case Q6_M1_KEPLER_ID: return referencePixelQ6Month1();
    	case Q6_M2_KEPLER_ID: return referencePixelQ6M2();
    	case Q6_M3_KEPLER_ID: return referencePixelQ6M3();
    	default:
    		throw new IllegalArgumentException("keplerId " + keplerId + " is not associated with 16 Cyg.");
    	}
    }
    
    public List<Offset> apertureOffset(int keplerId) {
    	switch (keplerId) {
    	case Q6_M1_KEPLER_ID: return apertureOffsetsQ6Month1();
    	case Q6_M2_KEPLER_ID: return apertureOffsetsQ6Month2();
    	case Q6_M3_KEPLER_ID: return apertureOffsetsQ6Month3();
    	default:
    		throw new IllegalArgumentException("keplerId " + keplerId + " is not associated with 16 Cyg.");
    	}
    }
    
    
    public List<Offset> apertureOffsetsQ6Month3() {
        return ImmutableList.of(new Offset(-2,-6),
            new Offset(-1,-6),
            new Offset(-6,-5),
            new Offset(-5,-5),
            new Offset(-4,-5),
            new Offset(-3,-5),
            new Offset(-2,-5),
            new Offset(-1,-5),
            new Offset(0,-5),
            new Offset(1,-5),
            new Offset(2,-5),
            new Offset(3,-5),
            new Offset(-6,-4),
            new Offset(-5,-4),
            new Offset(-4,-4),
            new Offset(-3,-4),
            new Offset(-2,-4),
            new Offset(-1,-4),
            new Offset(0,-4),
            new Offset(1,-4),
            new Offset(2,-4),
            new Offset(3,-4),
            new Offset(4,-4),
            new Offset(-7,-3),
            new Offset(-6,-3),
            new Offset(-5,-3),
            new Offset(-4,-3),
            new Offset(-3,-3),
            new Offset(-2,-3),
            new Offset(-1,-3),
            new Offset(0,-3),
            new Offset(1,-3),
            new Offset(2,-3),
            new Offset(3,-3),
            new Offset(4,-3),
            new Offset(5,-3),
            new Offset(6,-3),
            new Offset(-25,-2),
            new Offset(-24,-2),
            new Offset(-23,-2),
            new Offset(-22,-2),
            new Offset(-21,-2),
            new Offset(-20,-2),
            new Offset(-19,-2),
            new Offset(-18,-2),
            new Offset(-17,-2),
            new Offset(-16,-2),
            new Offset(-15,-2),
            new Offset(-14,-2),
            new Offset(-13,-2),
            new Offset(-12,-2),
            new Offset(-11,-2),
            new Offset(-10,-2),
            new Offset(-9,-2),
            new Offset(-8,-2),
            new Offset(-7,-2),
            new Offset(-6,-2),
            new Offset(-5,-2),
            new Offset(-4,-2),
            new Offset(-3,-2),
            new Offset(-2,-2),
            new Offset(-1,-2),
            new Offset(0,-2),
            new Offset(1,-2),
            new Offset(2,-2),
            new Offset(3,-2),
            new Offset(4,-2),
            new Offset(5,-2),
            new Offset(6,-2),
            new Offset(7,-2),
            new Offset(8,-2),
            new Offset(9,-2),
            new Offset(10,-2),
            new Offset(11,-2),
            new Offset(12,-2),
            new Offset(13,-2),
            new Offset(14,-2),
            new Offset(15,-2),
            new Offset(16,-2),
            new Offset(17,-2),
            new Offset(18,-2),
            new Offset(19,-2),
            new Offset(20,-2),
            new Offset(21,-2),
            new Offset(22,-2),
            new Offset(23,-2),
            new Offset(-88,-1),
            new Offset(-87,-1),
            new Offset(-86,-1),
            new Offset(-85,-1),
            new Offset(-84,-1),
            new Offset(-83,-1),
            new Offset(-82,-1),
            new Offset(-81,-1),
            new Offset(-80,-1),
            new Offset(-79,-1),
            new Offset(-78,-1),
            new Offset(-77,-1),
            new Offset(-76,-1),
            new Offset(-75,-1),
            new Offset(-74,-1),
            new Offset(-73,-1),
            new Offset(-72,-1),
            new Offset(-71,-1),
            new Offset(-70,-1),
            new Offset(-69,-1),
            new Offset(-68,-1),
            new Offset(-67,-1),
            new Offset(-66,-1),
            new Offset(-65,-1),
            new Offset(-64,-1),
            new Offset(-63,-1),
            new Offset(-62,-1),
            new Offset(-61,-1),
            new Offset(-60,-1),
            new Offset(-59,-1),
            new Offset(-58,-1),
            new Offset(-57,-1),
            new Offset(-56,-1),
            new Offset(-55,-1),
            new Offset(-54,-1),
            new Offset(-53,-1),
            new Offset(-52,-1),
            new Offset(-51,-1),
            new Offset(-50,-1),
            new Offset(-49,-1),
            new Offset(-48,-1),
            new Offset(-47,-1),
            new Offset(-46,-1),
            new Offset(-45,-1),
            new Offset(-44,-1),
            new Offset(-43,-1),
            new Offset(-42,-1),
            new Offset(-41,-1),
            new Offset(-40,-1),
            new Offset(-39,-1),
            new Offset(-38,-1),
            new Offset(-37,-1),
            new Offset(-36,-1),
            new Offset(-35,-1),
            new Offset(-34,-1),
            new Offset(-33,-1),
            new Offset(-32,-1),
            new Offset(-31,-1),
            new Offset(-30,-1),
            new Offset(-29,-1),
            new Offset(-28,-1),
            new Offset(-27,-1),
            new Offset(-26,-1),
            new Offset(-25,-1),
            new Offset(-24,-1),
            new Offset(-23,-1),
            new Offset(-22,-1),
            new Offset(-21,-1),
            new Offset(-20,-1),
            new Offset(-19,-1),
            new Offset(-18,-1),
            new Offset(-17,-1),
            new Offset(-16,-1),
            new Offset(-15,-1),
            new Offset(-14,-1),
            new Offset(-13,-1),
            new Offset(-12,-1),
            new Offset(-11,-1),
            new Offset(-10,-1),
            new Offset(-9,-1),
            new Offset(-8,-1),
            new Offset(-7,-1),
            new Offset(-6,-1),
            new Offset(-5,-1),
            new Offset(-4,-1),
            new Offset(-3,-1),
            new Offset(-2,-1),
            new Offset(-1,-1),
            new Offset(0,-1),
            new Offset(1,-1),
            new Offset(2,-1),
            new Offset(3,-1),
            new Offset(4,-1),
            new Offset(5,-1),
            new Offset(6,-1),
            new Offset(7,-1),
            new Offset(8,-1),
            new Offset(9,-1),
            new Offset(10,-1),
            new Offset(11,-1),
            new Offset(12,-1),
            new Offset(13,-1),
            new Offset(14,-1),
            new Offset(15,-1),
            new Offset(16,-1),
            new Offset(17,-1),
            new Offset(18,-1),
            new Offset(19,-1),
            new Offset(20,-1),
            new Offset(21,-1),
            new Offset(22,-1),
            new Offset(23,-1),
            new Offset(24,-1),
            new Offset(25,-1),
            new Offset(26,-1),
            new Offset(27,-1),
            new Offset(28,-1),
            new Offset(29,-1),
            new Offset(30,-1),
            new Offset(31,-1),
            new Offset(32,-1),
            new Offset(33,-1),
            new Offset(34,-1),
            new Offset(35,-1),
            new Offset(36,-1),
            new Offset(37,-1),
            new Offset(38,-1),
            new Offset(39,-1),
            new Offset(40,-1),
            new Offset(41,-1),
            new Offset(42,-1),
            new Offset(43,-1),
            new Offset(44,-1),
            new Offset(45,-1),
            new Offset(46,-1),
            new Offset(47,-1),
            new Offset(48,-1),
            new Offset(49,-1),
            new Offset(50,-1),
            new Offset(51,-1),
            new Offset(52,-1),
            new Offset(53,-1),
            new Offset(54,-1),
            new Offset(55,-1),
            new Offset(56,-1),
            new Offset(-21,0),
            new Offset(-20,0),
            new Offset(-19,0),
            new Offset(-18,0),
            new Offset(-17,0),
            new Offset(-16,0),
            new Offset(-15,0),
            new Offset(-14,0),
            new Offset(-13,0),
            new Offset(-12,0),
            new Offset(-11,0),
            new Offset(-10,0),
            new Offset(-9,0),
            new Offset(-8,0),
            new Offset(-7,0),
            new Offset(-6,0),
            new Offset(-5,0),
            new Offset(-4,0),
            new Offset(-3,0),
            new Offset(-2,0),
            new Offset(-1,0),
            new Offset(0,0),
            new Offset(1,0),
            new Offset(2,0),
            new Offset(3,0),
            new Offset(4,0),
            new Offset(5,0),
            new Offset(6,0),
            new Offset(7,0),
            new Offset(8,0),
            new Offset(9,0),
            new Offset(10,0),
            new Offset(11,0),
            new Offset(12,0),
            new Offset(13,0),
            new Offset(14,0),
            new Offset(15,0),
            new Offset(16,0),
            new Offset(17,0),
            new Offset(18,0),
            new Offset(19,0),
            new Offset(20,0),
            new Offset(21,0),
            new Offset(-5,1),
            new Offset(-4,1),
            new Offset(-3,1),
            new Offset(-2,1),
            new Offset(-1,1),
            new Offset(0,1),
            new Offset(1,1),
            new Offset(2,1),
            new Offset(3,1),
            new Offset(4,1),
            new Offset(5,1),
            new Offset(6,1),
            new Offset(-5,2),
            new Offset(-4,2),
            new Offset(-3,2),
            new Offset(-2,2),
            new Offset(-1,2),
            new Offset(0,2),
            new Offset(1,2),
            new Offset(2,2),
            new Offset(3,2),
            new Offset(4,2),
            new Offset(5,2),
            new Offset(6,2),
            new Offset(-5,3),
            new Offset(-4,3),
            new Offset(-3,3),
            new Offset(-2,3),
            new Offset(-1,3),
            new Offset(0,3),
            new Offset(1,3),
            new Offset(2,3),
            new Offset(3,3),
            new Offset(4,3),
            new Offset(5,3),
            new Offset(1,4),
            new Offset(2,4),
            new Offset(3,4),
            new Offset(4,4),
            new Offset(5,4));
    }
/*
 * scala> plannedTarget.getAperture.getReferenceRow
res0: Int = 922

scala> plannedTarget.getAperture.getReferenceColumn
res1: Int = 563


 */
    public Pair<Integer, Integer> referencePixelQ6M2() {
        return Pair.of(922, 563);
    }
    
    public List<Offset> apertureOffsetsQ6Month2() {
        return ImmutableList.of(
        new Offset(-2,-6),
        new Offset(-1,-6),
        new Offset(-6,-5),
        new Offset(-5,-5),
        new Offset(-4,-5),
        new Offset(-3,-5),
        new Offset(-2,-5),
        new Offset(-1,-5),
        new Offset(0,-5),
        new Offset(1,-5),
        new Offset(2,-5),
        new Offset(3,-5),
        new Offset(-6,-4),
        new Offset(-5,-4),
        new Offset(-4,-4),
        new Offset(-3,-4),
        new Offset(-2,-4),
        new Offset(-1,-4),
        new Offset(0,-4),
        new Offset(1,-4),
        new Offset(2,-4),
        new Offset(3,-4),
        new Offset(4,-4),
        new Offset(-7,-3),
        new Offset(-6,-3),
        new Offset(-5,-3),
        new Offset(-4,-3),
        new Offset(-3,-3),
        new Offset(-2,-3),
        new Offset(-1,-3),
        new Offset(0,-3),
        new Offset(1,-3),
        new Offset(2,-3),
        new Offset(3,-3),
        new Offset(4,-3),
        new Offset(5,-3),
        new Offset(6,-3),
        new Offset(-25,-2),
        new Offset(-24,-2),
        new Offset(-23,-2),
        new Offset(-22,-2),
        new Offset(-21,-2),
        new Offset(-20,-2),
        new Offset(-19,-2),
        new Offset(-18,-2),
        new Offset(-17,-2),
        new Offset(-16,-2),
        new Offset(-15,-2),
        new Offset(-14,-2),
        new Offset(-13,-2),
        new Offset(-12,-2),
        new Offset(-11,-2),
        new Offset(-10,-2),
        new Offset(-9,-2),
        new Offset(-8,-2),
        new Offset(-7,-2),
        new Offset(-6,-2),
        new Offset(-5,-2),
        new Offset(-4,-2),
        new Offset(-3,-2),
        new Offset(-2,-2),
        new Offset(-1,-2),
        new Offset(0,-2),
        new Offset(1,-2),
        new Offset(2,-2),
        new Offset(3,-2),
        new Offset(4,-2),
        new Offset(5,-2),
        new Offset(6,-2),
        new Offset(7,-2),
        new Offset(8,-2),
        new Offset(9,-2),
        new Offset(10,-2),
        new Offset(11,-2),
        new Offset(12,-2),
        new Offset(13,-2),
        new Offset(14,-2),
        new Offset(15,-2),
        new Offset(16,-2),
        new Offset(17,-2),
        new Offset(18,-2),
        new Offset(19,-2),
        new Offset(20,-2),
        new Offset(21,-2),
        new Offset(22,-2),
        new Offset(23,-2),
        new Offset(-88,-1),
        new Offset(-87,-1),
        new Offset(-86,-1),
        new Offset(-85,-1),
        new Offset(-84,-1),
        new Offset(-83,-1),
        new Offset(-82,-1),
        new Offset(-81,-1),
        new Offset(-80,-1),
        new Offset(-79,-1),
        new Offset(-78,-1),
        new Offset(-77,-1),
        new Offset(-76,-1),
        new Offset(-75,-1),
        new Offset(-74,-1),
        new Offset(-73,-1),
        new Offset(-72,-1),
        new Offset(-71,-1),
        new Offset(-70,-1),
        new Offset(-69,-1),
        new Offset(-68,-1),
        new Offset(-67,-1),
        new Offset(-66,-1),
        new Offset(-65,-1),
        new Offset(-64,-1),
        new Offset(-63,-1),
        new Offset(-62,-1),
        new Offset(-61,-1),
        new Offset(-60,-1),
        new Offset(-59,-1),
        new Offset(-58,-1),
        new Offset(-57,-1),
        new Offset(-56,-1),
        new Offset(-55,-1),
        new Offset(-54,-1),
        new Offset(-53,-1),
        new Offset(-52,-1),
        new Offset(-51,-1),
        new Offset(-50,-1),
        new Offset(-49,-1),
        new Offset(-48,-1),
        new Offset(-47,-1),
        new Offset(-46,-1),
        new Offset(-45,-1),
        new Offset(-44,-1),
        new Offset(-43,-1),
        new Offset(-42,-1),
        new Offset(-41,-1),
        new Offset(-40,-1),
        new Offset(-39,-1),
        new Offset(-38,-1),
        new Offset(-37,-1),
        new Offset(-36,-1),
        new Offset(-35,-1),
        new Offset(-34,-1),
        new Offset(-33,-1),
        new Offset(-32,-1),
        new Offset(-31,-1),
        new Offset(-30,-1),
        new Offset(-29,-1),
        new Offset(-28,-1),
        new Offset(-27,-1),
        new Offset(-26,-1),
        new Offset(-25,-1),
        new Offset(-24,-1),
        new Offset(-23,-1),
        new Offset(-22,-1),
        new Offset(-21,-1),
        new Offset(-20,-1),
        new Offset(-19,-1),
        new Offset(-18,-1),
        new Offset(-17,-1),
        new Offset(-16,-1),
        new Offset(-15,-1),
        new Offset(-14,-1),
        new Offset(-13,-1),
        new Offset(-12,-1),
        new Offset(-11,-1),
        new Offset(-10,-1),
        new Offset(-9,-1),
        new Offset(-8,-1),
        new Offset(-7,-1),
        new Offset(-6,-1),
        new Offset(-5,-1),
        new Offset(-4,-1),
        new Offset(-3,-1),
        new Offset(-2,-1),
        new Offset(-1,-1),
        new Offset(0,-1),
        new Offset(1,-1),
        new Offset(2,-1),
        new Offset(3,-1),
        new Offset(4,-1),
        new Offset(5,-1),
        new Offset(6,-1),
        new Offset(7,-1),
        new Offset(8,-1),
        new Offset(9,-1),
        new Offset(10,-1),
        new Offset(11,-1),
        new Offset(12,-1),
        new Offset(13,-1),
        new Offset(14,-1),
        new Offset(15,-1),
        new Offset(16,-1),
        new Offset(17,-1),
        new Offset(18,-1),
        new Offset(19,-1),
        new Offset(20,-1),
        new Offset(21,-1),
        new Offset(22,-1),
        new Offset(23,-1),
        new Offset(24,-1),
        new Offset(25,-1),
        new Offset(26,-1),
        new Offset(27,-1),
        new Offset(28,-1),
        new Offset(29,-1),
        new Offset(30,-1),
        new Offset(31,-1),
        new Offset(32,-1),
        new Offset(33,-1),
        new Offset(34,-1),
        new Offset(35,-1),
        new Offset(36,-1),
        new Offset(37,-1),
        new Offset(38,-1),
        new Offset(39,-1),
        new Offset(40,-1),
        new Offset(41,-1),
        new Offset(42,-1),
        new Offset(43,-1),
        new Offset(44,-1),
        new Offset(45,-1),
        new Offset(46,-1),
        new Offset(47,-1),
        new Offset(48,-1),
        new Offset(49,-1),
        new Offset(50,-1),
        new Offset(51,-1),
        new Offset(52,-1),
        new Offset(53,-1),
        new Offset(54,-1),
        new Offset(55,-1),
        new Offset(56,-1),
        new Offset(-21,0),
        new Offset(-20,0),
        new Offset(-19,0),
        new Offset(-18,0),
        new Offset(-17,0),
        new Offset(-16,0),
        new Offset(-15,0),
        new Offset(-14,0),
        new Offset(-13,0),
        new Offset(-12,0),
        new Offset(-11,0),
        new Offset(-10,0),
        new Offset(-9,0),
        new Offset(-8,0),
        new Offset(-7,0),
        new Offset(-6,0),
        new Offset(-5,0),
        new Offset(-4,0),
        new Offset(-3,0),
        new Offset(-2,0),
        new Offset(-1,0),
        new Offset(0,0),
        new Offset(1,0),
        new Offset(2,0),
        new Offset(3,0),
        new Offset(4,0),
        new Offset(5,0),
        new Offset(6,0),
        new Offset(7,0),
        new Offset(8,0),
        new Offset(9,0),
        new Offset(10,0),
        new Offset(11,0),
        new Offset(12,0),
        new Offset(13,0),
        new Offset(14,0),
        new Offset(15,0),
        new Offset(16,0),
        new Offset(17,0),
        new Offset(18,0),
        new Offset(19,0),
        new Offset(20,0),
        new Offset(21,0),
        new Offset(-5,1),
        new Offset(-4,1),
        new Offset(-3,1),
        new Offset(-2,1),
        new Offset(-1,1),
        new Offset(0,1),
        new Offset(1,1),
        new Offset(2,1),
        new Offset(3,1),
        new Offset(4,1),
        new Offset(5,1),
        new Offset(6,1),
        new Offset(-5,2),
        new Offset(-4,2),
        new Offset(-3,2),
        new Offset(-2,2),
        new Offset(-1,2),
        new Offset(0,2),
        new Offset(1,2),
        new Offset(2,2),
        new Offset(3,2),
        new Offset(4,2),
        new Offset(5,2),
        new Offset(6,2),
        new Offset(-5,3),
        new Offset(-4,3),
        new Offset(-3,3),
        new Offset(-2,3),
        new Offset(-1,3),
        new Offset(0,3),
        new Offset(1,3),
        new Offset(2,3),
        new Offset(3,3),
        new Offset(4,3),
        new Offset(5,3),
        new Offset(1,4),
        new Offset(2,4),
        new Offset(3,4),
        new Offset(4,4),
        new Offset(5,4));

    }
    
    /*ala> plannedTarget.getAperture.getReferenceRow
res0: Int = 922

scala> plannedTarget.getAperture.getReferenceColumn
res1: Int = 563
*/
    public Pair<Integer, Integer> referencePixelQ6Month1() {
        return Pair.of(922, 563);
    }
    
    /**
     * 100002400
     * @return
     */
    private List<Offset> apertureOffsetsQ6Month1() {
        
        return ImmutableList.of(
        new Offset(-2,-6),
        new Offset(-1,-6),
        new Offset(-6,-5),
        new Offset(-5,-5),
        new Offset(-4,-5),
        new Offset(-3,-5),
        new Offset(-2,-5),
        new Offset(-1,-5),
        new Offset(0,-5),
        new Offset(1,-5),
        new Offset(2,-5),
        new Offset(3,-5),
        new Offset(-6,-4),
        new Offset(-5,-4),
        new Offset(-4,-4),
        new Offset(-3,-4),
        new Offset(-2,-4),
        new Offset(-1,-4),
        new Offset(0,-4),
        new Offset(1,-4),
        new Offset(2,-4),
        new Offset(3,-4),
        new Offset(4,-4),
        new Offset(-7,-3),
        new Offset(-6,-3),
        new Offset(-5,-3),
        new Offset(-4,-3),
        new Offset(-3,-3),
        new Offset(-2,-3),
        new Offset(-1,-3),
        new Offset(0,-3),
        new Offset(1,-3),
        new Offset(2,-3),
        new Offset(3,-3),
        new Offset(4,-3),
        new Offset(5,-3),
        new Offset(6,-3),
        new Offset(-25,-2),
        new Offset(-24,-2),
        new Offset(-23,-2),
        new Offset(-22,-2),
        new Offset(-21,-2),
        new Offset(-20,-2),
        new Offset(-19,-2),
        new Offset(-18,-2),
        new Offset(-17,-2),
        new Offset(-16,-2),
        new Offset(-15,-2),
        new Offset(-14,-2),
        new Offset(-13,-2),
        new Offset(-12,-2),
        new Offset(-11,-2),
        new Offset(-10,-2),
        new Offset(-9,-2),
        new Offset(-8,-2),
        new Offset(-7,-2),
        new Offset(-6,-2),
        new Offset(-5,-2),
        new Offset(-4,-2),
        new Offset(-3,-2),
        new Offset(-2,-2),
        new Offset(-1,-2),
        new Offset(0,-2),
        new Offset(1,-2),
        new Offset(2,-2),
        new Offset(3,-2),
        new Offset(4,-2),
        new Offset(5,-2),
        new Offset(6,-2),
        new Offset(7,-2),
        new Offset(8,-2),
        new Offset(9,-2),
        new Offset(10,-2),
        new Offset(11,-2),
        new Offset(12,-2),
        new Offset(13,-2),
        new Offset(14,-2),
        new Offset(15,-2),
        new Offset(16,-2),
        new Offset(17,-2),
        new Offset(18,-2),
        new Offset(19,-2),
        new Offset(20,-2),
        new Offset(21,-2),
        new Offset(22,-2),
        new Offset(23,-2),
        new Offset(-88,-1),
        new Offset(-87,-1),
        new Offset(-86,-1),
        new Offset(-85,-1),
        new Offset(-84,-1),
        new Offset(-83,-1),
        new Offset(-82,-1),
        new Offset(-81,-1),
        new Offset(-80,-1),
        new Offset(-79,-1),
        new Offset(-78,-1),
        new Offset(-77,-1),
        new Offset(-76,-1),
        new Offset(-75,-1),
        new Offset(-74,-1),
        new Offset(-73,-1),
        new Offset(-72,-1),
        new Offset(-71,-1),
        new Offset(-70,-1),
        new Offset(-69,-1),
        new Offset(-68,-1),
        new Offset(-67,-1),
        new Offset(-66,-1),
        new Offset(-65,-1),
        new Offset(-64,-1),
        new Offset(-63,-1),
        new Offset(-62,-1),
        new Offset(-61,-1),
        new Offset(-60,-1),
        new Offset(-59,-1),
        new Offset(-58,-1),
        new Offset(-57,-1),
        new Offset(-56,-1),
        new Offset(-55,-1),
        new Offset(-54,-1),
        new Offset(-53,-1),
        new Offset(-52,-1),
        new Offset(-51,-1),
        new Offset(-50,-1),
        new Offset(-49,-1),
        new Offset(-48,-1),
        new Offset(-47,-1),
        new Offset(-46,-1),
        new Offset(-45,-1),
        new Offset(-44,-1),
        new Offset(-43,-1),
        new Offset(-42,-1),
        new Offset(-41,-1),
        new Offset(-40,-1),
        new Offset(-39,-1),
        new Offset(-38,-1),
        new Offset(-37,-1),
        new Offset(-36,-1),
        new Offset(-35,-1),
        new Offset(-34,-1),
        new Offset(-33,-1),
        new Offset(-32,-1),
        new Offset(-31,-1),
        new Offset(-30,-1),
        new Offset(-29,-1),
        new Offset(-28,-1),
        new Offset(-27,-1),
        new Offset(-26,-1),
        new Offset(-25,-1),
        new Offset(-24,-1),
        new Offset(-23,-1),
        new Offset(-22,-1),
        new Offset(-21,-1),
        new Offset(-20,-1),
        new Offset(-19,-1),
        new Offset(-18,-1),
        new Offset(-17,-1),
        new Offset(-16,-1),
        new Offset(-15,-1),
        new Offset(-14,-1),
        new Offset(-13,-1),
        new Offset(-12,-1),
        new Offset(-11,-1),
        new Offset(-10,-1),
        new Offset(-9,-1),
        new Offset(-8,-1),
        new Offset(-7,-1),
        new Offset(-6,-1),
        new Offset(-5,-1),
        new Offset(-4,-1),
        new Offset(-3,-1),
        new Offset(-2,-1),
        new Offset(-1,-1),
        new Offset(0,-1),
        new Offset(1,-1),
        new Offset(2,-1),
        new Offset(3,-1),
        new Offset(4,-1),
        new Offset(5,-1),
        new Offset(6,-1),
        new Offset(7,-1),
        new Offset(8,-1),
        new Offset(9,-1),
        new Offset(10,-1),
        new Offset(11,-1),
        new Offset(12,-1),
        new Offset(13,-1),
        new Offset(14,-1),
        new Offset(15,-1),
        new Offset(16,-1),
        new Offset(17,-1),
        new Offset(18,-1),
        new Offset(19,-1),
        new Offset(20,-1),
        new Offset(21,-1),
        new Offset(22,-1),
        new Offset(23,-1),
        new Offset(24,-1),
        new Offset(25,-1),
        new Offset(26,-1),
        new Offset(27,-1),
        new Offset(28,-1),
        new Offset(29,-1),
        new Offset(30,-1),
        new Offset(31,-1),
        new Offset(32,-1),
        new Offset(33,-1),
        new Offset(34,-1),
        new Offset(35,-1),
        new Offset(36,-1),
        new Offset(37,-1),
        new Offset(38,-1),
        new Offset(39,-1),
        new Offset(40,-1),
        new Offset(41,-1),
        new Offset(42,-1),
        new Offset(43,-1),
        new Offset(44,-1),
        new Offset(45,-1),
        new Offset(46,-1),
        new Offset(47,-1),
        new Offset(48,-1),
        new Offset(49,-1),
        new Offset(50,-1),
        new Offset(51,-1),
        new Offset(52,-1),
        new Offset(53,-1),
        new Offset(54,-1),
        new Offset(55,-1),
        new Offset(56,-1),
        new Offset(-21,0),
        new Offset(-20,0),
        new Offset(-19,0),
        new Offset(-18,0),
        new Offset(-17,0),
        new Offset(-16,0),
        new Offset(-15,0),
        new Offset(-14,0),
        new Offset(-13,0),
        new Offset(-12,0),
        new Offset(-11,0),
        new Offset(-10,0),
        new Offset(-9,0),
        new Offset(-8,0),
        new Offset(-7,0),
        new Offset(-6,0),
        new Offset(-5,0),
        new Offset(-4,0),
        new Offset(-3,0),
        new Offset(-2,0),
        new Offset(-1,0),
        new Offset(0,0),
        new Offset(1,0),
        new Offset(2,0),
        new Offset(3,0),
        new Offset(4,0),
        new Offset(5,0),
        new Offset(6,0),
        new Offset(7,0),
        new Offset(8,0),
        new Offset(9,0),
        new Offset(10,0),
        new Offset(11,0),
        new Offset(12,0),
        new Offset(13,0),
        new Offset(14,0),
        new Offset(15,0),
        new Offset(16,0),
        new Offset(17,0),
        new Offset(18,0),
        new Offset(19,0),
        new Offset(20,0),
        new Offset(21,0),
        new Offset(-5,1),
        new Offset(-4,1),
        new Offset(-3,1),
        new Offset(-2,1),
        new Offset(-1,1),
        new Offset(0,1),
        new Offset(1,1),
        new Offset(2,1),
        new Offset(3,1),
        new Offset(4,1),
        new Offset(5,1),
        new Offset(6,1),
        new Offset(-5,2),
        new Offset(-4,2),
        new Offset(-3,2),
        new Offset(-2,2),
        new Offset(-1,2),
        new Offset(0,2),
        new Offset(1,2),
        new Offset(2,2),
        new Offset(3,2),
        new Offset(4,2),
        new Offset(5,2),
        new Offset(6,2),
        new Offset(-5,3),
        new Offset(-4,3),
        new Offset(-3,3),
        new Offset(-2,3),
        new Offset(-1,3),
        new Offset(0,3),
        new Offset(1,3),
        new Offset(2,3),
        new Offset(3,3),
        new Offset(4,3),
        new Offset(5,3),
        new Offset(1,4),
        new Offset(2,4),
        new Offset(3,4),
        new Offset(4,4),
        new Offset(5,4)
        );
        
        
    }
    
    
}
