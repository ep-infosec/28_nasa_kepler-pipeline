# Resources for TargetListSetsPanel.class.
# 
# Copyright 2017 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
# 
# This file is available under the terms of the NASA Open Source Agreement
# (NOSA). You should have received a copy of this agreement with the
# Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
# 
# No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
# WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
# INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
# WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
# INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
# FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
# TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
# CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
# OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
# OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
# FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
# REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
# AND DISTRIBUTES IT "AS IS."
#
# Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
# AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
# SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
# THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
# EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
# PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
# SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
# STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
# PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
# REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
# TERMINATION OF THIS AGREEMENT.
#

targetListSetLabel.text=Target List Sets

create.Action.text=_New Target List Set
create.Action.smallIcon=/stock-icons/16/gtk-new.png
create.Action.largeIcon=/stock-icons/24/gtk-new.png
create.Action.accelerator=control N
create.Action.shortDescription=Create new target list set
create=Creating new target list set
create.failed=Could not create target list set editor
create.failed.secondary=%s
create.ReloadingData.failed=${create.failed}
create.ReloadingData.failed.secondary=${databaseError}

edit.Action.text=_Edit Target List Set
edit.Action.smallIcon=/stock-icons/16/gtk-edit.png
edit.Action.largeIcon=/stock-icons/24/gtk-edit.png
edit.Action.shortDescription=Edit target list set
edit.Action.accelerator=ENTER
edit=Editing target list set %s
edit.failed=Could not create target list set editor for %s
edit.failed.secondary=%s
edit.ReloadingData.failed=${edit.failed}
edit.ReloadingData.failed.secondary=${databaseError}

copy.Action.text=_Copy Target List Set
copy.Action.smallIcon=/stock-icons/16/gtk-copy.png
copy.Action.largeIcon=/stock-icons/24/gtk-copy.png
copy.Action.shortDescription=Copy target list set
copy=Copying target list set %s
copy.title=TargetListSetCopy
copy.description=Copies target list sets
copy.message=Not started yet
copy.failed=Could not copy target list sets %s
copy.failed.secondary=%s${retry}
copy.ReloadingData.failed=${copy.failed}
copy.ReloadingData.failed.secondary=${databaseError}
copy.BlockingDialog.title=Copying Target List Set
copy.BlockingDialog.optionPane.message=Copying target list set.\n\
    Please wait...
copy.couldntFindUniqueAlternative=Could not create new unique name for copy

compare.Action.text=Co_mpare Target List Sets
compare.Action.shortDescription=Compare two selected target list sets
compare=Comparing target list sets %s
compare.title=TargetListSetComparer
compare.description=Compares target list sets
compare.message=Not started yet
compare.message1=Diffing names of target lists
compare.message2=Diffing names of excluded target lists
compare.message3=Getting list of unique targets in %s
compare.message4=Diffing target lists
compare.title=%s <-> %s 
compare.text=Comparing target list sets: %s, %s\n\n\
	%,d target lists shared between %s and %s\n\
	%,d target lists in %s not in %s\n\
	%,d target lists in %s not in %s\n\n\
	%,d excluded target lists shared between %s and %s\n\
	%,d excluded target lists in %s not in %s\n\
	%,d excluded target lists in %s not in %s\n\n\
	%,d targets shared between %s and %s\n\
	%,d targets in %s not in %s\n\
	%,d targets in %s not in %s\n\n\
	Differences in target lists between %s and %s:\n
compare.text.diffExcluded=\n\
    Differences in excluded target lists between %s and %s:\n
compare.text.targets=\nDifferences in targets between %s and %s:\n
compare.text.added=+ 
compare.text.removed=- 
compare.failed=Could not compare target list sets
compare.failed.secondary=%s${retry}
compare.ReloadingData.failed=${compare.failed}
compare.ReloadingData.failed.secondary=${databaseError}
compare.BlockingDialog.title=Comparing Target List Sets
compare.BlockingDialog.optionPane.message=Comparing target list sets.\n\
    Please wait...
compare.cancelled=Compare cancelled by user

exportRejected.Action.text=_Export Rejected Targets
exportRejected.Action.shortDescription=Export rejected targets as a target list
exportRejected=Exporting rejected targets for %s
exportRejected.failed=Could not export rejected targets
exportRejected.failed.secondary=%s${retry}
exportRejected.ReloadingData.failed=${exportRejected.failed}
exportRejected.ReloadingData.failed.secondary=${databaseError}
exportRejected.BlockingDialog.title=Exporting Rejected Targets
exportRejected.BlockingDialog.optionPane.message=Exporting rejected targets.\n\
    Please wait...
exportRejected.exporting=Exporting rejected targets into %s
exportRejected.loaded=Loaded %d targets in %d ms
exportRejected.exported=Exported %d targets in %d ms
exportRejected.cancelled=Export cancelled by user

delete.Action.text=_Delete Target List Sets
delete.Action.smallIcon=/stock-icons/16/gtk-delete.png
delete.Action.largeIcon=/stock-icons/24/gtk-delete.png
delete.Action.shortDescription=Delete target list sets
delete=Deleting target list sets %s
delete.warn=Really delete these target list sets?
delete.warn.secondary=This operation can not be undone.\n\n%s
delete.cancelled=Delete cancelled by user
delete.title=TargetListSetDelete
delete.description=Deletes target list sets
delete.message=Not started yet
delete.failed=Could not delete target list sets %s
delete.failed.secondary=%s${retry}
delete.ReloadingData.failed=${delete.failed}
delete.ReloadingData.failed.secondary=${databaseError}
delete.BlockingDialog.title=Deleting Target List Sets
delete.BlockingDialog.optionPane.message=Deleting target list sets.\n\
    Please wait...

unlock.Action.text=_Unlock Target List Sets
unlock.Action.shortDescription=Unlock target list sets
unlock=Unlocking target list sets %s 
unlock.warn=Really unlock these target list sets?
unlock.warn.secondary=Unlocking target list sets will invalidate any \
    existing target definitions for them. \
    If you do wish to update these target list sets \
    and run TAD on them again, please press the OK button.\n\n%s
unlock.cancelled=Unlock cancelled by user
unlock.failed=Could not unlock target list sets %s
unlock.failed.secondary=%s${retry}
unlock.ReloadingData.failed=${unlock.failed}
unlock.ReloadingData.failed.secondary=${databaseError}
unlock.BlockingDialog.title=Unlocking Target List Sets
unlock.BlockingDialog.optionPane.message=Unlocking target list sets.\n\
    Please wait...

lock.Action.text=_Lock Down Target List Sets
lock.Action.shortDescription=Lock down target list sets and prepare for \
    target aperature definition generation
lock=Locking down %s
lock.failed=Could not lock target list sets %s
lock.failed.secondary=%s${retry}
lock.ReloadingData.failed=${lock.failed}
lock.ReloadingData.failed.secondary=${databaseError}
lock.BlockingDialog.title=Locking Down Target List Sets
lock.BlockingDialog.optionPane.message=Locking down target list sets.\n\
    Please wait...

markUplinked.Action.text=_Mark Target List Sets Uplinked
markUplinked.Action.shortDescription=Mark target list sets as uplinked so that \
    they can no longer be edited or removed
markUplinked=Marking target list sets %s uplinked 
markUplinked.warn=Really mark these target list sets as uplinked?
markUplinked.warn.secondary=This operation can not be undone. If you really \
    intend to never update or delete these target list sets ever again, \
    please press the OK button.\n\n%s
markUplinked.cancelled=Mark uplinked cancelled by user
markUplinked.failed=Could not mark target list sets %s as uplinked
markUplinked.failed.secondary=%s${retry}
markUplinked.ReloadingData.failed=${markUplinked.failed}
markUplinked.ReloadingData.failed.secondary=${databaseError}
markUplinked.BlockingDialog.title=Marking Target List Sets Uplinked
markUplinked.BlockingDialog.optionPane.message=Marking target list sets as uplinked.\n\
    Please wait...

refresh.Action.text=_Refresh Target List Sets
refresh.Action.smallIcon=/stock-icons/16/gtk-refresh.png
refresh.Action.largeIcon=/stock-icons/24/gtk-refresh.png
refresh.Action.shortDescription=Read target list sets from database
refresh=Refreshing target list sets

# Target list set database loading task.
TargetListSetLoadTask.title=TargetListSetLoader
TargetListSetLoadTask.description=Loads target list sets
TargetListSetLoadTask.message=Not started yet
TargetListSetLoadTask.retrieving=Retrieving target list sets...
TargetListSetLoadTask.loading=Loading target list sets
TargetListSetLoadTask.loaded=Loaded %d target list sets
TargetListSetLoadTask.failed=Could not retrieve target list sets
TargetListSetLoadTask.failed.secondary=%s${retry}
TargetListSetLoadTask.ReloadingData.failed=${TargetListSetLoadTask.failed}
TargetListSetLoadTask.ReloadingData.failed.secondary=${databaseError}
TargetListSetLoadTask.BlockingDialog.title=Reloading target list sets
TargetListSetLoadTask.BlockingDialog.optionPane.message=Reloading target list sets.\n\
    Please wait...

# Target list set update task.
UpdateTask.title=TargetListSetUpdate
UpdateTask.description=Updates target list sets
UpdateTask.message=Not started yet
