function [RptgenML_CReport1] = buildDataGoodnessReport
%BUILDDATAGOODNESSREPORT
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
 
%  Auto-generated by MATLAB on 02-Jun-2008 17:23:06
 
% Create RptgenML.CReport
RptgenML_CReport1 = RptgenML.CReport('RptFileName',...
'C:\path\to\matlab\ct\dg\prototype\DG_ReportGenerator\DataGoodnessReport.rpt',...
'Description','',...
'Stylesheet','html-!MultiPage',...
'Format','html',...
'FilenameName','%<strcat(''DG_Report_'', ffiName)>',...
'DirectoryName','%<ffiPath>',...
'DirectoryType','other');
% setedit(RptgenML_CReport1);
 
% Create rptgen.cfr_titlepage
rptgen_cfr_titlepage1 = rptgen.cfr_titlepage('Image','KeplerLogo.jpg',...
'Author','%<getenv(''USERNAME'')>',...
'Subtitle','Layout for the Matlab Report Generator',...
'Title','Data Goodness Report for %<ffiName>');
setParent(rptgen_cfr_titlepage1,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section1 = rptgen.cfr_section('Number','',...
'SectionTitle','File Information');
setParent(rptgen_cfr_section1,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph1 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph1,rptgen_cfr_section1);
 
% Create rptgen.cfr_text
rptgen_cfr_text1 = rptgen.cfr_text('Content',...
'This section will contain the headers extracted using extract_ffikeyword.m');
setParent(rptgen_cfr_text1,rptgen_cfr_paragraph1);
 
% Create rptgen.cml_eval
rptgen_cml_eval1 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','ffiKeywordCell = make_ffi_keyword_cell(ffiKeywordStruct);');
setParent(rptgen_cml_eval1,rptgen_cfr_paragraph1);
 
% Create rptgen.cfr_table
rptgen_cfr_table1 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 2 3],...
'isPgwide',false,...
'Source','ffiKeywordCell',...
'TableTitle','primary header information');
setParent(rptgen_cfr_table1,rptgen_cfr_paragraph1);
 
% Create rptgen.cfr_section
rptgen_cfr_section2 = rptgen.cfr_section('SectionTitle','Ancillary Data');
setParent(rptgen_cfr_section2,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph2 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph2,rptgen_cfr_section2);
 
% Create rptgen.cfr_text
rptgen_cfr_text2 = rptgen.cfr_text('Content',...
'Ancillary data retrieved using sandbox tool, MJDs');
setParent(rptgen_cfr_text2,rptgen_cfr_paragraph2);
 
% Create rptgen.cml_eval
rptgen_cml_eval2 = rptgen.cml_eval('isDiary',false,...
'EvalString',['',sprintf('\n'),'',sprintf('\n'),'% temperature =',sprintf('\n'),'% mean and rms pointing errors',sprintf('\n'),'% fine point established flag',sprintf('\n'),'% desaturation flag =',sprintf('\n'),'% focus position = ',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%']);
setParent(rptgen_cml_eval2,rptgen_cfr_paragraph2);
 
% Create rptgen.cfr_section
rptgen_cfr_section3 = rptgen.cfr_section('SectionTitle','Configuration Map');
setParent(rptgen_cfr_section3,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph3 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph3,rptgen_cfr_section3);
 
% Create rptgen.cfr_text
rptgen_cfr_text3 = rptgen.cfr_text('Content',...
'Configuration map retrieved using sandbox tool with configuration ID as the input');
setParent(rptgen_cfr_text3,rptgen_cfr_paragraph3);
 
% Create rptgen.cml_eval
rptgen_cml_eval3 = rptgen.cml_eval('isDiary',false,...
'EvalString',['',sprintf('\n'),'% Configuration map mnemonics and its values',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%',sprintf('\n'),'%']);
setParent(rptgen_cml_eval3,rptgen_cfr_paragraph3);
 
% Create rptgen_lo.clo_for
rptgen_lo_clo_for1 = rptgen_lo.clo_for('isCleanup',false,...
'VariableName','modnum',...
'LoopVector','[2]',...
'LoopType','vector');
setParent(rptgen_lo_clo_for1,RptgenML_CReport1);
 
% Create rptgen_lo.clo_for
rptgen_lo_clo_for2 = rptgen_lo.clo_for('isCleanup',false,...
'VariableName','outnum',...
'EndNumber','4');
setParent(rptgen_lo_clo_for2,rptgen_lo_clo_for1);
 
% Create rptgen.cfr_section
rptgen_cfr_section4 = rptgen.cfr_section('SectionTitle',...
'Module %<modnum> Output%<outnum>');
setParent(rptgen_cfr_section4,rptgen_lo_clo_for2);
 
% Create rptgen.cml_eval
rptgen_cml_eval4 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get tables of statistics',sprintf('\n'),'',sprintf('\n'),'channel = convert_from_module_output(modnum, outnum);',sprintf('\n'),'ffiImage = fitsread(ffiName, ''image'', channel);',sprintf('\n'),'obj = modoutClass(channel, ffiImage);',sprintf('\n'),'statStruct=compute_stat_pixel_regions(obj, ffiKeywordStruct.NumFfi);',sprintf('\n'),'',sprintf('\n'),'[starTable, leadingBlackTable trailingBlackTable...',sprintf('\n'),'   maskedSmearTable, virtualSmearTable] = convert_for_table(statStruct);']);
setParent(rptgen_cml_eval4,rptgen_cfr_section4);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph4 = rptgen.cfr_paragraph('ParaTitle','Star Region',...
'TitleType','specify');
setParent(rptgen_cfr_paragraph4,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval5 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get pixels for star region',sprintf('\n'),'pixels = get(obj,''starRegion'')/ffiKeywordStruct.NumFfi;',sprintf('\n'),'display_plots(pixels, obj)']);
setParent(rptgen_cml_eval5,rptgen_cfr_paragraph4);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop1 = rptgen_hg.chg_fig_loop('LoopType','ALL');
setParent(rptgen_hg_chg_fig_loop1,rptgen_cfr_paragraph4);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap1 = rptgen_hg.chg_fig_snap('InvertHardcopy','none',...
'isCapture',true,...
'DocHorizAlign','left');
setParent(rptgen_hg_chg_fig_snap1,rptgen_hg_chg_fig_loop1);
 
% Create rptgen.cfr_table
rptgen_cfr_table2 = rptgen.cfr_table('ShrinkEntries',false,...
'numHeaderRows',0,...
'AllAlign','center',...
'isPgwide',false,...
'Source','starTable',...
'TableTitle','Statistics for Star Region');
setParent(rptgen_cfr_table2,rptgen_cfr_paragraph4);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph5 = rptgen.cfr_paragraph('ParaTitle','Leading Black',...
'TitleType','specify');
setParent(rptgen_cfr_paragraph5,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval6 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get pixels for leading black region',sprintf('\n'),'pixels = get(obj,''leadingBlackRegion'')/ffiKeywordStruct.NumFfi;',sprintf('\n'),'display_plots(pixels, obj)']);
setParent(rptgen_cml_eval6,rptgen_cfr_paragraph5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop2 = rptgen_hg.chg_fig_loop('LoopType','ALL');
setParent(rptgen_hg_chg_fig_loop2,rptgen_cfr_paragraph5);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap2 = rptgen_hg.chg_fig_snap('InvertHardcopy','none',...
'isCapture',true,...
'DocHorizAlign','left');
setParent(rptgen_hg_chg_fig_snap2,rptgen_hg_chg_fig_loop2);
 
% Create rptgen.cfr_table
rptgen_cfr_table3 = rptgen.cfr_table('numHeaderRows',0,'isPgwide',false,...
'Source','leadingBlackTable',...
'TableTitle','Statistics for Leading Black');
setParent(rptgen_cfr_table3,rptgen_cfr_paragraph5);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph6 = rptgen.cfr_paragraph('ParaTitle','Trailing Black',...
'TitleType','specify');
setParent(rptgen_cfr_paragraph6,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval7 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get pixels for trailing black region',sprintf('\n'),'pixels = get(obj,''trailingBlackRegion'')/ffiKeywordStruct.NumFfi;',sprintf('\n'),'display_plots(pixels, obj)']);
setParent(rptgen_cml_eval7,rptgen_cfr_paragraph6);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop3 = rptgen_hg.chg_fig_loop('LoopType','ALL');
setParent(rptgen_hg_chg_fig_loop3,rptgen_cfr_paragraph6);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap3 = rptgen_hg.chg_fig_snap('InvertHardcopy','off',...
'isCapture',true,...
'DocHorizAlign','left');
setParent(rptgen_hg_chg_fig_snap3,rptgen_hg_chg_fig_loop3);
 
% Create rptgen.cfr_table
rptgen_cfr_table4 = rptgen.cfr_table('numHeaderRows',0,'isPgwide',false,...
'Source','trailingBlackTable',...
'TableTitle','Statistics for Trailing Black');
setParent(rptgen_cfr_table4,rptgen_cfr_paragraph6);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph7 = rptgen.cfr_paragraph('ParaTitle','Masked Smear',...
'TitleType','specify');
setParent(rptgen_cfr_paragraph7,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval8 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get pixels for masked smear region',sprintf('\n'),'pixels = get(obj,''maskedSmearRegion'')/ffiKeywordStruct.NumFfi;',sprintf('\n'),'display_plots(pixels, obj)']);
setParent(rptgen_cml_eval8,rptgen_cfr_paragraph7);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop4 = rptgen_hg.chg_fig_loop('LoopType','ALL');
setParent(rptgen_hg_chg_fig_loop4,rptgen_cfr_paragraph7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap4 = rptgen_hg.chg_fig_snap('InvertHardcopy','off',...
'isCapture',true,...
'DocHorizAlign','left');
setParent(rptgen_hg_chg_fig_snap4,rptgen_hg_chg_fig_loop4);
 
% Create rptgen.cfr_table
rptgen_cfr_table5 = rptgen.cfr_table('numHeaderRows',0,'isPgwide',false,...
'Source','maskedSmearTable',...
'TableTitle','Statistics for Masked Smear');
setParent(rptgen_cfr_table5,rptgen_cfr_paragraph7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph8 = rptgen.cfr_paragraph('ParaTitle','Virtual Smear',...
'TitleType','specify');
setParent(rptgen_cfr_paragraph8,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval9 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% get pixels for virtual smear region',sprintf('\n'),'pixels = get(obj,''virtualSmearRegion'')/ffiKeywordStruct.NumFfi;',sprintf('\n'),'display_plots(pixels, obj)']);
setParent(rptgen_cml_eval9,rptgen_cfr_paragraph8);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop5 = rptgen_hg.chg_fig_loop('LoopType','ALL');
setParent(rptgen_hg_chg_fig_loop5,rptgen_cfr_paragraph8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap5 = rptgen_hg.chg_fig_snap('InvertHardcopy','off',...
'isCapture',true,...
'DocHorizAlign','left');
setParent(rptgen_hg_chg_fig_snap5,rptgen_hg_chg_fig_loop5);
 
% Create rptgen.cfr_table
rptgen_cfr_table6 = rptgen.cfr_table('numHeaderRows',0,'isPgwide',false,...
'Source','virtualSmearTable',...
'TableTitle','Statistics for VirtualSmear');
setParent(rptgen_cfr_table6,rptgen_cfr_paragraph8);
 
% Create rptgen.cml_eval
rptgen_cml_eval10 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['% clear the workspace',sprintf('\n'),'',sprintf('\n'),'clear channel ffiImage ffiKeywordCell...',sprintf('\n'),'leadingBlackTable trailingBlackTable...',sprintf('\n'),'maskedSmearTable virtualSmearTable...',sprintf('\n'),'starTable pixels modnum outnum statStruct obj']);
setParent(rptgen_cml_eval10,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section5 = rptgen.cfr_section('SectionTitle',...
'Snapshot from GUI-User Determined');
setParent(rptgen_cfr_section5,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph9 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph9,rptgen_cfr_section5);
 
% Create rptgen.cfr_section
rptgen_cfr_section6 = rptgen.cfr_section('SectionTitle',...
'Focal Plane Dislay');
setParent(rptgen_cfr_section6,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph10 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph10,rptgen_cfr_section6);
 
