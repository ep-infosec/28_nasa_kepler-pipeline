function [RptgenML_CReport1] = builddgReportTemplate
%BUILDDGREPORTTEMPLATE
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
 
%  Auto-generated by MATLAB on 30-Sep-2008 21:05:21
 
% Create RptgenML.CReport
RptgenML_CReport1 = RptgenML.CReport('RptFileName',...
'/path/to/matlab/ct/dg/mfiles/dgReportTemplate.rpt',...
'Description','',...
'isAutoSaveOnGenerate',true,...
'Stylesheet','html-!MultiPage',...
'Format','html',...
'FilenameName','%<reportFileName>',...
'FilenameType','other',...
'DirectoryName','%<reportFilePath>',...
'DirectoryType','other');
% setedit(RptgenML_CReport1);
 
% Create rptgen.cfr_titlepage
rptgen_cfr_titlepage1 = rptgen.cfr_titlepage('Image','keplerLogo.jpg',...
'Abstract','',...
'Author','%<getenv(''USERNAME'')>',...
'Subtitle','FITS file location: %<ffiPath>',...
'Title','Data Goodness Report for %<ffiName>');
setParent(rptgen_cfr_titlepage1,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section1 = rptgen.cfr_section('SectionTitle','FITS Keywords');
setParent(rptgen_cfr_section1,RptgenML_CReport1);
 
% Create rptgen.cfr_table
rptgen_cfr_table1 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[3 3 6],...
'isPgwide',false,...
'Source','ffiKeywordTable');
setParent(rptgen_cfr_table1,rptgen_cfr_section1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph1 = rptgen.cfr_paragraph('ParaText',...
'Keywords retrieved from the primary header of fits file.');
setParent(rptgen_cfr_paragraph1,rptgen_cfr_section1);
 
% Create rptgen.cfr_section
rptgen_cfr_section2 = rptgen.cfr_section('SectionTitle','Configuration Map');
setParent(rptgen_cfr_section2,RptgenML_CReport1);
 
% Create rptgen.cfr_table
rptgen_cfr_table2 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[3 3 6],...
'isPgwide',false,...
'Source','configMapTable');
setParent(rptgen_cfr_table2,rptgen_cfr_section2);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph2 = rptgen.cfr_paragraph('ParaText',...
'Configuration map with mnemonics, values, and description for the corresponding configuration map ID (SCCONFID)');
setParent(rptgen_cfr_paragraph2,rptgen_cfr_section2);
 
% Create rptgen.cfr_section
rptgen_cfr_section3 = rptgen.cfr_section('SectionTitle','Ancillary Data');
setParent(rptgen_cfr_section3,RptgenML_CReport1);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph3 = rptgen.cfr_paragraph('ParaText',...
'No ancillary data in Stable at this point');
setParent(rptgen_cfr_paragraph3,rptgen_cfr_section3);
 
% Create rptgen.cfr_section
rptgen_cfr_section4 = rptgen.cfr_section('SectionTitle',...
'Focal Plane Display');
setParent(rptgen_cfr_section4,RptgenML_CReport1);
 
% Create rptgen.cfr_image
rptgen_cfr_image1 = rptgen.cfr_image('FileName',...
'/path/to/matlab/ct/dg/mfiles/focalPlaneCoords.gif',...
'Caption','Proper module and output orientations for the focal plane');
setParent(rptgen_cfr_image1,rptgen_cfr_section4);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop1 = rptgen_hg.chg_fig_loop('TagList',{'fp_display'},...
'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop1,rptgen_cfr_section4);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap1 = rptgen_hg.chg_fig_snap('Caption',...
'Focal plane display with modules and outputs in position and orientation placed according to the figure above');
setParent(rptgen_hg_chg_fig_snap1,rptgen_hg_chg_fig_loop1);
 
% Create rptgen.cfr_section
rptgen_cfr_section5 = rptgen.cfr_section('SectionTitle','Summary Plots');
setParent(rptgen_cfr_section5,RptgenML_CReport1);
 
% Create rptgen.cml_eval
rptgen_cml_eval1 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','summary_plot(statStruct);');
setParent(rptgen_cml_eval1,rptgen_cfr_section5);
 
% Create rptgen.cfr_section
rptgen_cfr_section6 = rptgen.cfr_section('SectionTitle','Star');
setParent(rptgen_cfr_section6,rptgen_cfr_section5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop2 = rptgen_hg.chg_fig_loop('TagList',{'summary_star'},...
'UseRegexp',false,...
'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop2,rptgen_cfr_section6);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap2 = rptgen_hg.chg_fig_snap('Caption',...
['Top:  Mean intensity value for the star region.  Error bars are one standard deviation above and below the mean.',sprintf('\n'),'Center:  Percent of pixels successfully transmitted for the star region',sprintf('\n'),'Bottom:  Percent of pixels below the low guard band or  above the high guard band for the star region']);
setParent(rptgen_hg_chg_fig_snap2,rptgen_hg_chg_fig_loop2);
 
% Create rptgen.cfr_section
rptgen_cfr_section7 = rptgen.cfr_section('SectionTitle','Leading Black');
setParent(rptgen_cfr_section7,rptgen_cfr_section5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop3 = rptgen_hg.chg_fig_loop('TagList',...
{'summary_leadingBlack'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop3,rptgen_cfr_section7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap3 = rptgen_hg.chg_fig_snap('Caption',...
['Top:  Mean intensity value for the leading black region.  Error bars are one standard deviation above and below the mean.',sprintf('\n'),'Center:  Percent of pixels successfully transmitted for the leading black region',sprintf('\n'),'Bottom:  Percent of pixels below the low guard band or above the high guard band for the leading black region']);
setParent(rptgen_hg_chg_fig_snap3,rptgen_hg_chg_fig_loop3);
 
% Create rptgen.cfr_section
rptgen_cfr_section8 = rptgen.cfr_section('SectionTitle','Trailing Black');
setParent(rptgen_cfr_section8,rptgen_cfr_section5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop4 = rptgen_hg.chg_fig_loop('TagList',...
{'summary_trailingBlack'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop4,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap4 = rptgen_hg.chg_fig_snap('Caption',...
['Top:  Mean intensity value for the trailing black region.  Error bars are one standard deviation above and below the mean.',sprintf('\n'),'Center:  Percent of pixels successfully transmitted for the trailing black region',sprintf('\n'),'Bottom:  Percent of pixels below the low guard band or above the high guard band for the trailing black region']);
setParent(rptgen_hg_chg_fig_snap4,rptgen_hg_chg_fig_loop4);
 
% Create rptgen.cfr_section
rptgen_cfr_section9 = rptgen.cfr_section('SectionTitle','Masked Smear');
setParent(rptgen_cfr_section9,rptgen_cfr_section5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop5 = rptgen_hg.chg_fig_loop('TagList',...
{'summary_maskedSmear'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop5,rptgen_cfr_section9);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap5 = rptgen_hg.chg_fig_snap('Caption',...
['Top:  Mean intensity value for the masked smear region.  Error bars are one standard deviation above and below the mean.',sprintf('\n'),'Center:  Percent of pixels successfully transmitted for the masked smear region',sprintf('\n'),'Bottom:  Percent of pixels below the low guard band or above the high guard band for the masked smear region']);
setParent(rptgen_hg_chg_fig_snap5,rptgen_hg_chg_fig_loop5);
 
% Create rptgen.cfr_section
rptgen_cfr_section10 = rptgen.cfr_section('SectionTitle','Virtual Smear');
setParent(rptgen_cfr_section10,rptgen_cfr_section5);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop6 = rptgen_hg.chg_fig_loop('TagList',...
{'summary_virtualSmear'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop6,rptgen_cfr_section10);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap6 = rptgen_hg.chg_fig_snap('Caption',...
['Top:  Mean intensity value for the virtual smear region.  Error bars are one standard deviation above and below the mean.',sprintf('\n'),'Center:  Percent of pixels successfully transmitted for the virtual smear region',sprintf('\n'),'Bottom:  Percent of pixels below the low guard band or above the high guard band for the virtual smear region']);
setParent(rptgen_hg_chg_fig_snap6,rptgen_hg_chg_fig_loop6);
 
% Create rptgen.cml_eval
rptgen_cml_eval2 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval2,rptgen_cfr_section5);
 
% Create rptgen_lo.clo_for
rptgen_lo_clo_for1 = rptgen_lo.clo_for('VariableName','n','EndNumber','84');
setParent(rptgen_lo_clo_for1,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section11 = rptgen.cfr_section('SectionTitle',...
'Module  %<statStruct(n).module> Output %<statStruct(n).output>');
setParent(rptgen_cfr_section11,rptgen_lo_clo_for1);
 
% Create rptgen.cml_eval
rptgen_cml_eval3 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['numCoadds = ffiKeywordStruct.NUM_FFI;',sprintf('\n'),'startMjd = ffiKeywordStruct.STARTIME;',sprintf('\n'),'endMjd = ffiKeywordStruct.END_TIME;',sprintf('\n'),'module = statStruct(n).module;',sprintf('\n'),'output = statStruct(n).output;',sprintf('\n'),'',sprintf('\n'),'tablefits =prepare_for_fitsread(ffiName);',sprintf('\n'),'',sprintf('\n'),'image = fitsread_check_modout(ffiName, module, output, tablefits);',sprintf('\n'),'dgTrimmedImageObj = dgTrimmedImageClass( module, output, numCoadds, startMjd, endMjd, image);',sprintf('\n'),'new_display_plots(dgTrimmedImageObj)',sprintf('\n'),'display_histogram(dgTrimmedImageObj)',sprintf('\n'),'display_scatter(dgTrimmedImageObj, lowGuardBand, highGuardBand )']);
setParent(rptgen_cml_eval3,rptgen_cfr_section11);
 
% Create rptgen.cfr_section
rptgen_cfr_section12 = rptgen.cfr_section('SectionTitle','Images');
setParent(rptgen_cfr_section12,rptgen_cfr_section11);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop7 = rptgen_hg.chg_fig_loop('TagList',...
{'star','collateral'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop7,rptgen_cfr_section12);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap7 = rptgen_hg.chg_fig_snap;
setParent(rptgen_hg_chg_fig_snap7,rptgen_hg_chg_fig_loop7);
 
% Create rptgen.cfr_section
rptgen_cfr_section13 = rptgen.cfr_section('SectionTitle','Histograms');
setParent(rptgen_cfr_section13,rptgen_cfr_section11);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop8 = rptgen_hg.chg_fig_loop('TagList',{'','hist_star'},...
'UseRegexp',false,...
'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop8,rptgen_cfr_section13);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap8 = rptgen_hg.chg_fig_snap('Caption',...
['Histograms represent the number of counts for binned intensity per read. ',sprintf('\n'),'Top: Star region over the entire intensity range with 1000 bins.  ',sprintf('\n'),'Bottom:  Zoomed in histograms for each quarter of the full range of the star region, bin for each is 100.']);
setParent(rptgen_hg_chg_fig_snap8,rptgen_hg_chg_fig_loop8);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop9 = rptgen_hg.chg_fig_loop('TagList',{'hist_col'},...
'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop9,rptgen_cfr_section13);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap9 = rptgen_hg.chg_fig_snap('Caption',...
['Histograms represent the number of counts for binned intensity per read. ',sprintf('\n'),'Top: Histograms for each of the collateral regions, 1000 bins.',sprintf('\n'),'Bottom:  Zoomed in histograms for each of the collateral regions with 1000 bins.  Range of the zoom is one standard deviation above and below the mode.']);
setParent(rptgen_hg_chg_fig_snap9,rptgen_hg_chg_fig_loop9);
 
% Create rptgen.cfr_section
rptgen_cfr_section14 = rptgen.cfr_section('SectionTitle','Scatter Plots');
setParent(rptgen_cfr_section14,rptgen_cfr_section11);
 
% Create rptgen_hg.chg_fig_loop
rptgen_hg_chg_fig_loop10 = rptgen_hg.chg_fig_loop('TagList',...
{'scatter_star','scatter_col'},'UseRegexp',false,'LoopType','TAG');
setParent(rptgen_hg_chg_fig_loop10,rptgen_cfr_section14);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap10 = rptgen_hg.chg_fig_snap;
setParent(rptgen_hg_chg_fig_snap10,rptgen_hg_chg_fig_loop10);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph4 = rptgen.cfr_paragraph('ParaText',...
['Scatter plots show all pixel intensities for each region.  ',sprintf('\n'),'Top panel: star region.',sprintf('\n'),'Bottom panel: collateral regions.',sprintf('\n'),'High guard band is indicated by the green line and is 95% of the pixel value range (2^14-1).',sprintf('\n'),'Low Guard Band is indicated by the red line and is 95% of the mean black value for the module output.']);
setParent(rptgen_cfr_paragraph4,rptgen_cfr_section14);
 
% Create rptgen.cfr_section
rptgen_cfr_section15 = rptgen.cfr_section('SectionTitle','Statistics');
setParent(rptgen_cfr_section15,rptgen_cfr_section11);
 
% Create rptgen.cml_eval
rptgen_cml_eval4 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['',sprintf('\n'),'%get data from statStruct (in base workspace ) and format into ''table''',sprintf('\n'),'',sprintf('\n'),'starCell = struct2cell(squeeze(statStruct(n).star));',sprintf('\n'),'leadingBlackCell = struct2cell(squeeze(statStruct(n).leadingBlack));',sprintf('\n'),'trailingBlackCell = struct2cell(squeeze(statStruct(n).trailingBlack));',sprintf('\n'),'maskedSmearCell = struct2cell(squeeze(statStruct(n).maskedSmear));',sprintf('\n'),'virtualSmearCell = struct2cell(squeeze(statStruct(n).virtualSmear));',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'rowHeader ={''min'';''max'';''mean''; ''median''; ''mode''; ''stdev'';...',sprintf('\n'),'''expected number of pixels''; ''number of missing pixels''; ''% complete'';...',sprintf('\n'),'''high guard band value''; ''number pixels above high guard band'';...',sprintf('\n'),'''low guard band value''; ''number pixels below low guard band''};',sprintf('\n'),'',sprintf('\n'),'colHeader = [{''''}, {''star''}, {''leading black''}, {''trailing black''}, {''masked smear''}, {''virtual smear''}];',sprintf('\n'),'',sprintf('\n'),'table = [ colHeader; rowHeader, starCell, leadingBlackCell, trailingBlackCell, maskedSmearCell, virtualSmearCell];']);
setParent(rptgen_cml_eval4,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table3 = rptgen.cfr_table('ShrinkEntries',false,...
'AllAlign','justify',...
'ColumnWidths',[5 2 2 2 2 2],...
'isPgwide',false,...
'Source','table',...
'TableTitle','Statistics and pixel completeness');
setParent(rptgen_cfr_table3,rptgen_cfr_section15);
 
% Create rptgen.cml_eval
rptgen_cml_eval5 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['',sprintf('\n'),'',sprintf('\n'),'[starTable, lbTable, tbTable, msTable, vsTable] = obtain_out_of_guard_pixels(dgTrimmedImageObj, lowGuardBand ,highGuardBand)',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'header = [{''row''}, {''column''}, {''value''}]',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'if ~isempty(starTable)',sprintf('\n'),'cell = num2cell(starTable);',sprintf('\n'),'newStarTable = [header; cell];',sprintf('\n'),'end',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'if ~isempty(lbTable)',sprintf('\n'),'cell = num2cell(lbTable);',sprintf('\n'),'newLbTable = [header; cell];',sprintf('\n'),'end',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'if ~isempty(tbTable)',sprintf('\n'),'cell = num2cell(tbTable);',sprintf('\n'),'newTbTable = [header; cell];',sprintf('\n'),'end',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'if ~isempty(msTable)',sprintf('\n'),'cell = num2cell(msTable);',sprintf('\n'),'newMsTable = [header; cell];',sprintf('\n'),'end',sprintf('\n'),'',sprintf('\n'),'',sprintf('\n'),'if ~isempty(vsTable)',sprintf('\n'),'cell = num2cell(vsTable);',sprintf('\n'),'newVsTable = [header; cell];',sprintf('\n'),'end']);
setParent(rptgen_cml_eval5,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table4 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 1 2],...
'isPgwide',false,...
'Source','newStarTable',...
'TableTitle','Pixels out of  guard bands for star region');
setParent(rptgen_cfr_table4,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table5 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 1 2],...
'isPgwide',false,...
'Source','newLbTable',...
'TableTitle','Pixels out of  guard bands for leading black region');
setParent(rptgen_cfr_table5,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table6 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 1 2],...
'isPgwide',false,...
'Source','newTbTable',...
'TableTitle','Pixels out of  guard bands for trailing black region');
setParent(rptgen_cfr_table6,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table7 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 1 2],...
'isPgwide',false,...
'Source','newMsTable',...
'TableTitle','Pixels out of  guard bands for masked smear region');
setParent(rptgen_cfr_table7,rptgen_cfr_section15);
 
% Create rptgen.cfr_table
rptgen_cfr_table8 = rptgen.cfr_table('ShrinkEntries',false,...
'ColumnWidths',[1 1 2],...
'isPgwide',false,...
'Source','newVsTable',...
'TableTitle','Pixels out of  guard bands for virtual smear region');
setParent(rptgen_cfr_table8,rptgen_cfr_section15);
 
% Create rptgen.cml_eval
rptgen_cml_eval6 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['',sprintf('\n'),'',sprintf('\n'),'close all',sprintf('\n'),'clear module output startMjd endMjd numCoadds',sprintf('\n'),'clear tablefits image dgTrimmedImageObj',sprintf('\n'),'clear colHeader maskedSmearCell rowHeaderCell starCell table leadingBlackCell trailingBlackCell virtualSmearCell rowHeader',sprintf('\n'),'',sprintf('\n'),'clear starTable lbTable tbTable msTable vsTable',sprintf('\n'),'clear newStarTable newLbTable newTbTable newMsTable newVsTable',sprintf('\n'),'clear header cell']);
setParent(rptgen_cml_eval6,rptgen_cfr_section11);
 
