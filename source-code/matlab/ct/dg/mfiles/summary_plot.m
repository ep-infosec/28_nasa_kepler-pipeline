function summary_plot(statStruct)
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% function summary_plot(statStruct)
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%
% summary_plot graphs summary statistics for all modouts for ea/ pixel
% region.  
%
% statStruct is generated from dg_generate_bg_stat_struct.m
%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% INPUTS: 
%           
%           statStruct: [ 1 x 84 struct] of the statistics generated by
%                       dg_generate_big_stat_struct
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% OUTPUTS:
%          
%            5 figures with 3 subplots each.  Each figure for each pixel
%            region.  Top subplot contains the mean & stdev.  Center subplot
%            contains pixel completeness.  Bottom subplot contains % pixel
%            out of guard bands.  All 5 figures get tagged with
%            'summary_pixelregionname' on the figure handle
%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
            

ch = length(statStruct);
region = {'star', 'leadingBlack', 'trailingBlack', 'maskedSmear', 'virtualSmear'};
newLabel = [2:4,6:20,22:24]; % module numbers -these will be the x tick marks for all graphs


% preallocate
average = zeros(ch, 1);
stdev = zeros(ch, 1);
complete = zeros(ch, 1);
outOfGuards= zeros(ch, 1);



for r = 1: length(region) % for each region genrate 1 figure with 3 subplots

    for n=1:ch
        average(n) = statStruct(n).(region{r}).mean;
        stdev(n) = statStruct(n).(region{r}).stdev;
        complete(n) = statStruct(n).(region{r}).percentPixelComplete;
        outOfGuards(n) = 100*(statStruct(n).(region{r}).countPixLowGuardBand + statStruct(n).(region{r}).countPixHighGuardBand)/statStruct(n).(region{r}).expectedPixelCount;
    end

    figure('units', 'pixels','position', [200 50 1000 715],...
        'numbertitle', 'off', 'name', sprintf(' summary plot of %s', region{r}), ...
        'tag', ['summary_' region{r}] , 'color',[1 1 1]);
    
    subplot(3,1,1) % top plot
    errorbar(average, stdev, '.b')
    set(gca, 'xtick', 1:4:84, 'xticklabel', newLabel, 'xgrid', 'on');
    xlabel('\bf \fontsize{10} Module');
    ylabel('\bf \fontsize{10} Mean DN/Read')
    
    subplot(3,1,2) % center plot
    plot(complete, '.b')
    set(gca, 'xtick', 1:4:84, 'xticklabel', newLabel, 'xgrid', 'on'); 
    xlabel('\bf \fontsize{10} Module'); 
    ylabel('\bf \fontsize{10} % Pixel Complete')
    
    
    subplot(3,1,3) % bottom plot
    plot(outOfGuards, '.b')
    set(gca, 'xtick', 1:4:84, 'xticklabel', newLabel, 'xgrid', 'on');
    xlabel('\bf \fontsize{10} Module'); 
    ylabel('\bf \fontsize{10} % Pixels out of Guard Bands')
   
end



return