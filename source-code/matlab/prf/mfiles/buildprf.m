function [RptgenML_CReport1] = buildprf
%BUILDPRF
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
 
%  Auto-generated by MATLAB on 19-Dec-2008 18:03:36
 
% Create RptgenML.CReport
RptgenML_CReport1 = RptgenML.CReport('RptFileName',...
'c:\path\to\matlab\prf\mfiles\prf.rpt','Stylesheet','default-fo',...
'FilenameName','prf',...
'DirectoryName','C:\path\to\matlab\prf\mfiles',...
'DirectoryType','pwd');
% setedit(RptgenML_CReport1);
 
% Create rptgen.cfr_titlepage
rptgen_cfr_titlepage1 = rptgen.cfr_titlepage('AuthorMode','none',...
'Title','Pixel Response Function Characterization Report');
setParent(rptgen_cfr_titlepage1,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section1 = rptgen.cfr_section('SectionTitle','General Information');
setParent(rptgen_cfr_section1,RptgenML_CReport1);
 
% Create rptgen.cml_eval
rptgen_cml_eval1 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['tab{1,1} = ''Generated:'' ; ',sprintf('\n'),'tab{1,2} = local_time_to_utc(now,31) ;',sprintf('\n'),'tab{2,1} = ''Module:'' ;',sprintf('\n'),'tab{2,2} = ''prf'' ;',sprintf('\n'),'tab{3,1} = ''CCD Module:'' ;',sprintf('\n'),'tab{3,2} = prfInputStruct.ccdModule ;',sprintf('\n'),'tab{4,1} = ''CCD Output:'' ;',sprintf('\n'),'tab{4,2} = prfInputStruct.ccdOutput ;']);
setParent(rptgen_cml_eval1,rptgen_cfr_section1);
 
% Create rptgen.cfr_table
rptgen_cfr_table1 = rptgen.cfr_table('numHeaderRows',0,'isBorder',false,'isPgwide',false,...
'Source','tab');
setParent(rptgen_cfr_table1,rptgen_cfr_section1);
 
% Create rptgen.cml_eval
rptgen_cml_eval2 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','clear tab ;');
setParent(rptgen_cml_eval2,rptgen_cfr_section1);
 
% Create rptgen.cfr_section
rptgen_cfr_section2 = rptgen.cfr_section('SectionTitle','Inputs');
setParent(rptgen_cfr_section2,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section3 = rptgen.cfr_section('SectionTitle',...
'MJD Mid-Times and Index Numbers of PRF Cadences');
setParent(rptgen_cfr_section3,rptgen_cfr_section2);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph1 = rptgen.cfr_paragraph('ParaText',...
'Note:  MJDs without index numbers indicate gapped cadences.');
setParent(rptgen_cfr_paragraph1,rptgen_cfr_section3);
 
% Create rptgen.cml_eval
rptgen_cml_eval3 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['nCadenceAll = length(prfInputStruct.cadenceTimes.midTimestamps) ;',sprintf('\n'),'nCadenceGood = 0 ;',sprintf('\n'),'tab = cell(nCadenceAll+1,2) ;',sprintf('\n'),'tab{1,1} = ''Cadence MJD'' ;',sprintf('\n'),'tab{1,2} = ''Index'' ;',sprintf('\n'),'for iCadence = 1:nCadenceAll',sprintf('\n'),' tab{iCadence+1,1} = prfInputStruct.cadenceTimes.midTimestamps(iCadence) ;',sprintf('\n'),' if (~prfInputStruct.cadenceTimes.gapIndicators(iCadence))',sprintf('\n'),'  nCadenceGood = nCadenceGood + 1 ;',sprintf('\n'),'  tab{iCadence+1,2} = nCadenceGood ;',sprintf('\n'),' end',sprintf('\n'),'end']);
setParent(rptgen_cml_eval3,rptgen_cfr_paragraph1);
 
% Create rptgen.cfr_table
rptgen_cfr_table2 = rptgen.cfr_table('ShrinkEntries',false,'AllAlign','right',...
'isPgwide',false,...
'Source','tab');
setParent(rptgen_cfr_table2,rptgen_cfr_paragraph1);
 
% Create rptgen.cml_eval
rptgen_cml_eval4 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['clear tab ;',sprintf('\n'),'tab{1,1} = ''Number of Cadences Used in Fit'' ;',sprintf('\n'),'tab{1,2} = nCadenceGood ;',sprintf('\n'),'tab{2,1} = ''Index of Base Attitude Cadence'' ;',sprintf('\n'),'tab{2,2} = prfInputStruct.baseAttitudeIndex ;']);
setParent(rptgen_cml_eval4,rptgen_cfr_paragraph1);
 
% Create rptgen.cfr_table
rptgen_cfr_table3 = rptgen.cfr_table('ShrinkEntries',false,'numHeaderRows',0,...
'AllAlign','right',...
'isPgwide',false,...
'Source','tab');
setParent(rptgen_cfr_table3,rptgen_cfr_paragraph1);
 
% Create rptgen.cml_eval
rptgen_cml_eval5 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','clear tab ;');
setParent(rptgen_cml_eval5,rptgen_cfr_paragraph1);
 
% Create rptgen.cfr_section
rptgen_cfr_section4 = rptgen.cfr_section('SectionTitle','PRF Fitting Parameters');
setParent(rptgen_cfr_section4,rptgen_cfr_section2);
 
% Create rptgen.cml_eval
rptgen_cml_eval6 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['tab = cell(12,2) ;',sprintf('\n'),'tab{1,1} = ''Number of PRFs to be Fitted'' ;',sprintf('\n'),'tab{2,1} = ''PRF Overlap'' ;',sprintf('\n'),'tab{3,1} = ''Sub-pixel Resolution'' ;',sprintf('\n'),'tab{4,1} = ''Pixel Array Size'' ;',sprintf('\n'),'tab{5,1} = ''Maximum Polynomial Order'' ;',sprintf('\n'),'tab{6,1} = ''Magnitude Range'' ;',sprintf('\n'),'tab{7,1} = ''Crowding Metric Threshold'' ;',sprintf('\n'),'tab{8,1} = ''Contour Cutoff Parameter'' ;',sprintf('\n'),'tab{9,1} = ''Polynomial Type'' ;',sprintf('\n'),'tab{10,1} = ''Region Fraction Minimum Value'' ;',sprintf('\n'),'tab{11,1} = ''Region Fraction Step Size'' ;',sprintf('\n'),'tab{12,1} = ''Minimum Number of Stars per Region'' ;',sprintf('\n'),'%',sprintf('\n'),'tab{1,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.numPrfsPerChannel ;',sprintf('\n'),'tab{2,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.prfOverlap ;',sprintf('\n'),'tab{3,2} = [num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.subPixelRowResolution), ...',sprintf('\n'),''' rows x '',num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.subPixelColumnResolution), ...',sprintf('\n'),''' columns''] ;',sprintf('\n'),'tab{4,2} = [num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.pixelArrayRowSize), ...',sprintf('\n'),''' rows x '',num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.pixelArrayColumnSize), ...',sprintf('\n'),''' columns''] ;',sprintf('\n'),'tab{5,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.maximumPolyOrder',sprintf('\n'),'tab{6,2} = [num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.magnitudeRange(1)), ...',sprintf('\n'),''' to '', num2str(prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.magnitudeRange(2))] ;',sprintf('\n'),'tab{7,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.crowdingThreshold ;',sprintf('\n'),'tab{8,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.contourCutoff ;',sprintf('\n'),'tab{9,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.prfPolynomialType ;',sprintf('\n'),'tab{10,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.regionMinSize ;',sprintf('\n'),'tab{11,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.regionStepSize ;',sprintf('\n'),'tab{12,2} = prfStructureVector(1).prfPolyStructure.prfConfigurationStruct.minStars ;']);
setParent(rptgen_cml_eval6,rptgen_cfr_section4);
 
% Create rptgen.cfr_table
rptgen_cfr_table4 = rptgen.cfr_table('numHeaderRows',0,'AllAlign','right','Source','tab');
setParent(rptgen_cfr_table4,rptgen_cfr_section4);
 
% Create rptgen.cml_eval
rptgen_cml_eval7 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','clear tab');
setParent(rptgen_cml_eval7,rptgen_cfr_section4);
 
% Create rptgen.cfr_section
rptgen_cfr_section5 = rptgen.cfr_section('SectionTitle','Fit Results');
setParent(rptgen_cfr_section5,RptgenML_CReport1);
 
% Create rptgen.cfr_section
rptgen_cfr_section6 = rptgen.cfr_section('SectionTitle','Area of mod/out Used for Fit(s)');
setParent(rptgen_cfr_section6,rptgen_cfr_section5);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph2 = rptgen.cfr_paragraph('ParaText',...
'Note:  dots indicate the positions of stars used in the fit(s).');
setParent(rptgen_cfr_paragraph2,rptgen_cfr_section6);
 
% Create rptgen.cml_eval
rptgen_cml_eval8 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['prfRegionPlotHandle = plot_prf_fit_regions( prfStructureVector ) ;',sprintf('\n'),'starTargets = find(any(selectedTargetMatrix'')) ;',sprintf('\n'),'targets = targetStarsStruct(starTargets) ;',sprintf('\n'),'row = [targets.row] ;',sprintf('\n'),'column = [targets.column] ;',sprintf('\n'),'rowMatrix = reshape(row,length(prfInputStruct.cadenceTimes.startTimestamps), ...',sprintf('\n'),'length(targets)) ;',sprintf('\n'),'rowMatrix = rowMatrix'' ;',sprintf('\n'),'columnMatrix = reshape(column,length(prfInputStruct.cadenceTimes.startTimestamps), ...',sprintf('\n'),'length(targets)) ;',sprintf('\n'),'columnMatrix = columnMatrix'' ;',sprintf('\n'),'rowVector = rowMatrix(:,prfInputStruct.baseAttitudeIndex) ;',sprintf('\n'),'columnVector = columnMatrix(:,prfInputStruct.baseAttitudeIndex) ;',sprintf('\n'),'',sprintf('\n'),'plot(columnVector,rowVector,''k.'') ;']);
setParent(rptgen_cml_eval8,rptgen_cfr_section6);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap1 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap1,rptgen_cfr_section6);
 
% Create rptgen.cml_eval
rptgen_cml_eval9 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close(prfRegionPlotHandle) ;');
setParent(rptgen_cml_eval9,rptgen_cfr_section6);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph3 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph3,rptgen_cfr_section6);
 
% Create rptgen.cfr_text
rptgen_cfr_text1 = rptgen.cfr_text('isLiteral',true,'Content','');
setParent(rptgen_cfr_text1,rptgen_cfr_paragraph3);
 
% Create rptgen.cfr_section
rptgen_cfr_section7 = rptgen.cfr_section('SectionTitle','PRF Centroiding Fit Residuals');
setParent(rptgen_cfr_section7,rptgen_cfr_section5);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph4 = rptgen.cfr_paragraph('ParaText',...
['This section shows the centroiding fit residuals on the base attitude cadence ',sprintf('\n'),'when compared to the theoretical centroid positions computed from the',sprintf('\n'),'geometry model, spacecraft pointing, MJD of the base attitude cadence, and',sprintf('\n'),'star RA and Dec values.']);
setParent(rptgen_cfr_paragraph4,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval10 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['[row,col,dRow,dCol,crowding,gapIndicators] = compute_centroiding_error( ...',sprintf('\n'),'    prfResultStruct.centroids, targetStarsStruct, ...',sprintf('\n'),'    prfInputStruct.baseAttitudeIndex ) ;',sprintf('\n'),'goodData = find(~gapIndicators) ;',sprintf('\n'),'row = row(goodData) ;',sprintf('\n'),'col = col(goodData) ;',sprintf('\n'),'dRow = dRow(goodData) ;',sprintf('\n'),'dCol = dCol(goodData) ;',sprintf('\n'),'crowding = crowding(goodData) ;',sprintf('\n'),'figure ;',sprintf('\n'),'subplot(2,1,1)',sprintf('\n'),'plot(crowding,dRow,''bd'') ;',sprintf('\n'),'hold on',sprintf('\n'),'plot(crowding,dCol,''ms'') ;',sprintf('\n'),'c=prfInputStruct.prfConfigurationStruct.crowdingThreshold;',sprintf('\n'),'ylabel(''dRow, dCol [pixels]'') ;',sprintf('\n'),'maxabs = max(abs([dRow(:) ; dCol(:)])) ;',sprintf('\n'),'axis([0 1 -maxabs maxabs]) ;',sprintf('\n'),'plot([c c],[-maxabs maxabs],''r'') ;',sprintf('\n'),'legend(''Row Residual'',''Column Residual'') ;',sprintf('\n'),'subplot(2,1,2) ;',sprintf('\n'),'plot(crowding,abs(dRow),''bd'') ;',sprintf('\n'),'hold on',sprintf('\n'),'plot(crowding,abs(dCol),''ms'') ;',sprintf('\n'),'xlabel(''Extended Crowding Metric'') ;',sprintf('\n'),'ylabel(''|dRow|, |dCol| [pixels]'') ;',sprintf('\n'),'axis([0 1 0 maxabs]) ;',sprintf('\n'),'plot([c c],[0 maxabs],''r'') ;']);
setParent(rptgen_cml_eval10,rptgen_cfr_section7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap2 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90',...
'Caption','Row and Column centroiding residuals as a function of extended crowding metric.');
setParent(rptgen_hg_chg_fig_snap2,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval11 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['close all ;',sprintf('\n'),'goodCrowding = find(crowding >= prfInputStruct.prfConfigurationStruct.crowdingThreshold) ;',sprintf('\n'),'row = row(goodCrowding) ;',sprintf('\n'),'col = col(goodCrowding) ;',sprintf('\n'),'dRow = dRow(goodCrowding) ;',sprintf('\n'),'dCol = dCol(goodCrowding) ;',sprintf('\n'),'nBins = 51 ;',sprintf('\n'),'figure',sprintf('\n'),'subplot(2,1,1)',sprintf('\n'),'hist(dRow,nBins) ;',sprintf('\n'),'xlabel(''Row Residual [pixels]'') ;',sprintf('\n'),'title(''Row Residual on Base Attitude Cadence'')',sprintf('\n'),'subplot(2,1,2) ;',sprintf('\n'),'rmsRow = plot_residual_distribution(dRow,1,nBins) ;',sprintf('\n'),'title(''Row Residual on Base Attitude Cadence -- Central Distribution'') ;',sprintf('\n'),'xlabel(''Row Residual [pixels]'') ;']);
setParent(rptgen_cml_eval11,rptgen_cfr_section7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap3 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap3,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval12 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval12,rptgen_cfr_section7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph5 = rptgen.cfr_paragraph('ParaText',...
'Psuedo-RMS of row residual central distribution: %<rmsRow> pixels.');
setParent(rptgen_cfr_paragraph5,rptgen_cfr_section7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph6 = rptgen.cfr_paragraph('ParaText',...
['Note:  Only stars with extended crowding metric >=',sprintf('\n'),'%<prfInputStruct.prfConfigurationStruct.crowdingThreshold> included in plot.']);
setParent(rptgen_cfr_paragraph6,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval13 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['figure ;',sprintf('\n'),'subplot(2,1,1)',sprintf('\n'),'hist(dCol,nBins) ;',sprintf('\n'),'xlabel(''Column Residual [pixels]'') ;',sprintf('\n'),'title(''Column Residual on Base Attitude Cadence'')',sprintf('\n'),'subplot(2,1,2) ;',sprintf('\n'),'rmsCol = plot_residual_distribution(dCol,1,nBins) ;',sprintf('\n'),'xlabel(''Column Residual [pixels]'') ;',sprintf('\n'),'title(''Column Residual on Base Attitude Cadence -- Central Distribution'')']);
setParent(rptgen_cml_eval13,rptgen_cfr_section7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap4 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap4,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval14 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval14,rptgen_cfr_section7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph7 = rptgen.cfr_paragraph('ParaText',...
'Psuedo-RMS of column residual central distribution: %<rmsCol> pixels.');
setParent(rptgen_cfr_paragraph7,rptgen_cfr_section7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph8 = rptgen.cfr_paragraph('ParaText',...
['Note:  Only stars with extended crowding metric >=',sprintf('\n'),'%<prfInputStruct.prfConfigurationStruct.crowdingThreshold> included in plot.']);
setParent(rptgen_cfr_paragraph8,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval15 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','display_centroiding_error( row, col, dRow, dCol ) ;');
setParent(rptgen_cml_eval15,rptgen_cfr_section7);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap5 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap5,rptgen_cfr_section7);
 
% Create rptgen.cml_eval
rptgen_cml_eval16 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval16,rptgen_cfr_section7);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph9 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph9,rptgen_cfr_section7);
 
% Create rptgen.cfr_text
rptgen_cfr_text2 = rptgen.cfr_text('isLiteral',true,'Content','');
setParent(rptgen_cfr_text2,rptgen_cfr_paragraph9);
 
% Create rptgen_lo.clo_for
rptgen_lo_clo_for1 = rptgen_lo.clo_for('EndNumber','length(prfStructureVector)');
setParent(rptgen_lo_clo_for1,rptgen_cfr_section5);
 
% Create rptgen.cfr_section
rptgen_cfr_section8 = rptgen.cfr_section('SectionTitle','PRF Number %<RPTGEN_LOOP>');
setParent(rptgen_cfr_section8,rptgen_lo_clo_for1);
 
% Create rptgen.cml_eval
rptgen_cml_eval17 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['tab = cell(7,2) ;',sprintf('\n'),'tab{1,1} = ''PRF Location Row'' ;',sprintf('\n'),'tab{2,1} = ''PRF Location Column'' ;',sprintf('\n'),'tab{3,1} = ''Region Fraction'' ;',sprintf('\n'),'tab{4,1} = ''Number of Stars'' ;',sprintf('\n'),'tab{5,1} = ''Row Limits'' ;',sprintf('\n'),'tab{6,1} = ''Column Limits'' ;',sprintf('\n'),'tab{7,1} = ''chisq / ndof'' ;',sprintf('\n'),'%',sprintf('\n'),'tab{1,2} = prfStructureVector(RPTGEN_LOOP).prfPolyStructure.row ;',sprintf('\n'),'tab{2,2} = prfStructureVector(RPTGEN_LOOP).prfPolyStructure.column ;',sprintf('\n'),'tab{3,2} = regionFractionVector(RPTGEN_LOOP) ;',sprintf('\n'),'tab{4,2} = nStarsVector(RPTGEN_LOOP) ;',sprintf('\n'),'tab{5,2} = [num2str(prfStructureVector(RPTGEN_LOOP).prfPolyStructure.prfConfigurationStruct.rowLimit(1)), ...',sprintf('\n'),''' to '', num2str(prfStructureVector(RPTGEN_LOOP).prfPolyStructure.prfConfigurationStruct.rowLimit(2))] ;',sprintf('\n'),'tab{6,2} = [num2str(prfStructureVector(RPTGEN_LOOP).prfPolyStructure.prfConfigurationStruct.columnLimit(1)), ...',sprintf('\n'),''' to '', num2str(prfStructureVector(RPTGEN_LOOP).prfPolyStructure.prfConfigurationStruct.columnLimit(2))] ;',sprintf('\n'),'[row,col,value,residual,uncertainty,ndof] = get_prf_residuals( ...',sprintf('\n'),'prfStructureVector(RPTGEN_LOOP) ) ;',sprintf('\n'),'tab{7,2} = sum( (residual./uncertainty).^2 ) / ...',sprintf('\n'),'    ( length(residual)-ndof ) ;']);
setParent(rptgen_cml_eval17,rptgen_cfr_section8);
 
% Create rptgen.cfr_table
rptgen_cfr_table5 = rptgen.cfr_table('numHeaderRows',0,'AllAlign','right','Source','tab');
setParent(rptgen_cfr_table5,rptgen_cfr_section8);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph10 = rptgen.cfr_paragraph;
setParent(rptgen_cfr_paragraph10,rptgen_cfr_section8);
 
% Create rptgen.cfr_text
rptgen_cfr_text3 = rptgen.cfr_text('isLiteral',true,'Content','');
setParent(rptgen_cfr_text3,rptgen_cfr_paragraph10);
 
% Create rptgen.cml_eval
rptgen_cml_eval18 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['prfObject = prfClass(prfStructureVector(RPTGEN_LOOP).prfPolyStructure.polyCoeffStruct) ;',sprintf('\n'),'draw(prfObject,''mesh'') ;',sprintf('\n'),'scaleVector = axis ;',sprintf('\n'),'title(''Normalized Pixel Response Function'') ;',sprintf('\n'),'xlabel(''Row [pixels]'') ;',sprintf('\n'),'ylabel(''Column [pixel]'') ; ',sprintf('\n'),'zlabel(''Amplitude [A.U.]'') ;']);
setParent(rptgen_cml_eval18,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap6 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap6,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval19 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['close all',sprintf('\n'),'[a,b,c]=plot3_decimated(row,col,value,50000,0.01*max(value)) ;',sprintf('\n'),'title(''Pixel Response Function -- Data Used in Fit'') ;',sprintf('\n'),'xlabel(''Row [pixels]'') ;',sprintf('\n'),'ylabel(''Column [pixels]'') ;',sprintf('\n'),'zlabel(''Amplitude [A.U.]'') ;',sprintf('\n'),'axis(scaleVector) ;']);
setParent(rptgen_cml_eval19,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap7 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap7,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval20 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['draw(prfObject,''mesh'') ;',sprintf('\n'),'scaleVector = axis ;',sprintf('\n'),'title(''Normalized Pixel Response Function'') ;',sprintf('\n'),'xlabel(''Row [pixels]'') ;',sprintf('\n'),'ylabel(''Column [pixel]'') ; ',sprintf('\n'),'zlabel(''Amplitude [A.U.]'') ;']);
setParent(rptgen_cml_eval20,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap8 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap8,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval21 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['close all ;',sprintf('\n'),'zeroTo11 = linspace(0,11,400) ;',sprintf('\n'),'[rowGrid,colGrid] = meshgrid(zeroTo11,zeroTo11) ;',sprintf('\n'),'valGrid = griddata(row,col,value,rowGrid,colGrid) ;',sprintf('\n'),'mesh(rowGrid,colGrid,valGrid) ;',sprintf('\n'),'axis(scaleVector) ;',sprintf('\n'),'title(''Pixel Response Function -- Data Used in Fit'') ;',sprintf('\n'),'xlabel(''Row [pixels]'') ;',sprintf('\n'),'ylabel(''Column [pixels]'') ;',sprintf('\n'),'zlabel(''Amplitude [pixels]'') ;']);
setParent(rptgen_cml_eval21,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap9 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap9,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval22 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['clear tab',sprintf('\n'),'close all',sprintf('\n'),'figure',sprintf('\n'),'nBin = 201 ;',sprintf('\n'),'subplot(2,1,1)',sprintf('\n'),'hist(residual./uncertainty,nBin) ;',sprintf('\n'),'xlabel(''Residual ./ Uncertainty'') ;',sprintf('\n'),'title(''Chi-Square Contribution'') ;',sprintf('\n'),'subplot(2,1,2) ;',sprintf('\n'),'chi2rms = plot_residual_distribution(residual,uncertainty,nBin) ;',sprintf('\n'),'title(''Chi-Square Contribution -- Core of Distribution'') ;',sprintf('\n'),'xlabel(''Residual ./ Uncertainty'') ;']);
setParent(rptgen_cml_eval22,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap10 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap10,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval23 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval23,rptgen_cfr_section8);
 
% Create rptgen.cfr_paragraph
rptgen_cfr_paragraph11 = rptgen.cfr_paragraph('ParaText',...
'Psuedo-RMS of chi-square contribution = %<chi2rms>');
setParent(rptgen_cfr_paragraph11,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval24 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['draw(prfObject,''contour'') ;',sprintf('\n'),'display_quality(prfObject) ;',sprintf('\n'),'close(2) ;',sprintf('\n'),'close(3) ;',sprintf('\n'),'figure(1) ;',sprintf('\n'),'title(''Normalized Pixel Response Function'') ;',sprintf('\n'),'xlabel(''Row [pixels]'') ;',sprintf('\n'),'ylabel(''Column [pixels]'') ;']);
setParent(rptgen_cml_eval24,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap11 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap11,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval25 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['figure(4) ;',sprintf('\n'),'title(''PRF Cross-Sections at Center'') ;',sprintf('\n'),'xlabel(''Row/Column Position [pixels]'') ;',sprintf('\n'),'ylabel(''Amplitude [A.U.]'') ;']);
setParent(rptgen_cml_eval25,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap12 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap12,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval26 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['figure(5) ;',sprintf('\n'),'title(''Row / Column Cross Section Difference'') ;',sprintf('\n'),'xlabel(''Row / Column [pixels]'') ;',sprintf('\n'),'ylabel(''Difference [A.U.]'') ;']);
setParent(rptgen_cml_eval26,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap13 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap13,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval27 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval27,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval28 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString',['figure',sprintf('\n'),'plot(col,row,''.'')',sprintf('\n'),'title(''Data Coverage of PRF Area'') ;',sprintf('\n'),'xlabel(''Column [pixels]'') ;',sprintf('\n'),'ylabel(''Row [pixels]'') ;',sprintf('\n'),'axis([0 prfInputStruct.prfConfigurationStruct.pixelArrayColumnSize ...',sprintf('\n'),'0 prfInputStruct.prfConfigurationStruct.pixelArrayColumnSize]) ;']);
setParent(rptgen_cml_eval28,rptgen_cfr_section8);
 
% Create rptgen_hg.chg_fig_snap
rptgen_hg_chg_fig_snap14 = rptgen_hg.chg_fig_snap('ImageFormat','jpeg90');
setParent(rptgen_hg_chg_fig_snap14,rptgen_cfr_section8);
 
% Create rptgen.cml_eval
rptgen_cml_eval29 = rptgen.cml_eval('isInsertString',false,'isDiary',false,...
'EvalString','close all');
setParent(rptgen_cml_eval29,rptgen_cfr_section8);
 
