function [maskedSmearColsToExcludeDueToSpilledCharge, channelsWithBadCols] = ...
    get_masked_smear_columns_to_exclude_K2(campaign, channel)
% [maskedSmearColsToExcludeDueToSpilledCharge, channelsWithBadCols] = ...
%    get_masked_smear_columns_to_exclude_K2(campaign, channel)
% Function to extract the 1-based CCD column indices where the masked smear is
% corrupted by spilled charge from a saturated star. There is a set of
% columns for each channel (possibly empty) for each campaign.
% Inputs:
%   campaign: K2 campaign number 0-?
%   channel: 1-84 focal plane channel number
%
% Outputs:
%   maskedSmearColsToExcludeDueToSpilledCharge: column array of 1-based
%   column numbers to exclude, possibly empty
%
% autogenerated by auto_generate_cal_bad_smear_table_k2.m
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
 


switch campaign
	case{0} 
		channelsWithBadCols = [... 
			2; 11; 13; 25; 26; 28; 29; 30; 31; 32; 33; 34; 35; 36; ...
			38; 39; 40; 42; 43; 53; 55; 61; 62; 63; 64; 65; 66; 67; ...
			68; 73; 77; 78; 79; 80; 82; 84; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 1076 1077 ];... 
			[ 799 ];... 
			[ 942 943 946 ];... 
			[ 944 945 946 947 948 ];... 
			[ 945 946 ];... 
			[ 938 939 940 941 942 943 944 945 946 947 948 949 ];... 
			[ 214 216 ];... 
			[ 210 214 215 216 217 819 ];... 
			[ 214 215 216 285 ];... 
			[ 207 208 209 210 211 212 213 214 215 216 217 813 814 819 820 ];... 
			[ 329 330 334 998 999 1000 1001 ];... 
			[ 991 992 993 994 995 996 997 998 999 1000 1001 1002 ];... 
			[ 996 997 998 999 1000 1001 1002 ];... 
			[ 998 999 1000 1001 1002 ];... 
			[ 45 ];... 
			[ 46 ];... 
			[ 44 45 46 47 48 49 50 51 ];... 
			[ 500 501 505 506 ];... 
			[ 19 20 48 76 ];... 
			[ 416 417 ];... 
			[ 715 ];... 
			[ 765 766 767 768 769 770 771 ];... 
			[ 766 768 ];... 
			[ 766 767 768 769 887 888 889 ];... 
			[ 766 767 768 769 ];... 
			[ 910 ];... 
			[ 95 96 97 98 99 100 ];... 
			[ 92 93 94 95 96 97 98 99 100 101 102 ];... 
			[ 96 97 98 99 100 101 339 ];... 
			[ 865 1012 1013 ];... 
			[ 1101 ];... 
			[ 1101 ];... 
			[ 98 99 1101 ];... 
			[ 1100 1101 1102 1103 ];... 
			[ 748 749 779 780 ];... 
			[ 747 748 749 750 778 779 780 781 782 783 ];... 
			}; 

	case{1} 
		channelsWithBadCols = [... 
			22; 23; 24; 29; 30; 31; 32; 33; 34; 35; 36; 38; 43; 50; ...
			51; 52; 53; 55; 57; 59; 60; 64; 73; 77; 78; 79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 246 247 248 249 ];... 
			[ 245 246 247 248 249 250 251 252 253 ];... 
			[ 246 248 249 250 ];... 
			[ 26 27 28 29 ];... 
			[ 24 25 26 27 28 29 30 ];... 
			[ 26 27 285 ];... 
			[ 26 27 ];... 
			[ 547 548 549 550 551 552 553 554 555 556 557 558 559 560 ];... 
			[ 551 552 554 ];... 
			[ 551 552 553 554 ];... 
			[ 551 552 553 554 555 ];... 
			[ 513 514 515 ];... 
			[ 19 20 48 76 ];... 
			[ 723 724 725 ];... 
			[ 721 722 723 724 725 726 727 728 729 ];... 
			[ 724 726 ];... 
			[ 416 417 ];... 
			[ 715 ];... 
			[ 1105 1106 1107 1108 1109 1110 1111 ];... 
			[ 398 399 400 401 402 403 404 ];... 
			[ 400 401 1108 1110 ];... 
			[ 984 ];... 
			[ 865 1012 1013 ];... 
			[ 967 968 969 970 971 ];... 
			[ 965 966 967 968 969 970 971 972 973 974 ];... 
			[ 966 967 968 969 970 971 972 ];... 
			[ 967 968 969 970 971 ];... 
			}; 

	case{2} 
		channelsWithBadCols = [... 
			13; 14; 16; 21; 22; 23; 24; 25; 26; 27; 28; 31; 35; 37; ...
			38; 39; 40; 42; 43; 44; 45; 46; 47; 48; 53; 55; 57; 58; ...
			59; 60; 65; 66; 67; 68; 73; 75; 76; 77; 78; 79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 417 418 419 ];... 
			[ 417 418 419 ];... 
			[ 414 415 416 417 418 419 420 421 422 ];... 
			[ 351 352 353 354 355 ];... 
			[ 350 351 352 353 354 355 356 357 ];... 
			[ 351 352 353 ];... 
			[ 351 352 353 354 355 ];... 
			[ 162 163 164 165 166 167 ];... 
			[ 164 165 ];... 
			[ 1047 ];... 
			[ 163 164 165 ];... 
			[ 285 ];... 
			[ 975 976 977 978 979 980 ];... 
			[ 229 230 231 ];... 
			[ 229 230 231 ];... 
			[ 229 230 231 ];... 
			[ 226 227 228 229 230 231 232 233 234 ];... 
			[ 955 956 ];... 
			[ 19 20 48 76 953 954 955 956 957 958 959 ];... 
			[ 955 956 ];... 
			[ 305 306 307 308 1034 1035 1036 ];... 
			[ 304 305 306 307 308 309 ];... 
			[ 305 306 307 308 ];... 
			[ 303 304 305 306 307 308 309 310 311 ];... 
			[ 416 417 ];... 
			[ 715 716 ];... 
			[ 304 305 306 ];... 
			[ 304 305 306 307 ];... 
			[ 304 305 306 ];... 
			[ 306 ];... 
			[ 828 829 830 831 832 833 ];... 
			[ 168 169 170 171 172 355 356 357 358 359 830 831 ];... 
			[ 168 169 170 171 172 173 174 354 355 356 357 358 359 360 361 ];... 
			[ 170 171 172 356 357 358 359 830 831 832 ];... 
			[ 651 652 865 1012 1013 ];... 
			[ 649 650 651 652 653 654 655 656 ];... 
			[ 651 652 ];... 
			[ 995 996 997 998 999 1000 1001 1002 1003 1004 1096 1097 1098 ];... 
			[ 996 997 998 999 1000 1001 1002 1003 1096 1097 1098 1099 ];... 
			[ 997 1096 1097 1098 ];... 
			[ 996 997 998 999 1000 1001 1002 1003 1004 1095 1096 1097 1098 1099 1100 1101 ];... 
			}; 

	case{3} 
		channelsWithBadCols = [... 
			13; 14; 15; 16; 31; 53; 55; 57; 58; 59; 60; 66; 73; 78; ...
			79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 840 841 842 843 ];... 
			[ 839 840 841 842 843 844 845 ];... 
			[ 839 840 841 842 843 ];... 
			[ 840 841 842 843 ];... 
			[ 285 ];... 
			[ 416 417 785 786 787 788 789 ];... 
			[ 715 ];... 
			[ 171 172 173 ];... 
			[ 170 171 172 173 174 175 176 ];... 
			[ 171 172 173 ];... 
			[ 171 172 173 ];... 
			[ 206 ];... 
			[ 865 1012 1013 ];... 
			[ 555 556 557 558 559 ];... 
			[ 556 557 558 ];... 
			[ 302 303 304 305 556 557 ];... 
			}; 

	case{4} 
		channelsWithBadCols = [... 
			1; 2; 4; 13; 14; 15; 16; 25; 27; 28; 30; 31; 32; 39; ...
			43; 49; 50; 51; 52; 53; 54; 55; 56; 73; 74; 76; 77; 78; ...
			79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 419 420 421 422 423 424 ];... 
			[ 136 137 138 139 421 ];... 
			[ 135 136 137 138 139 140 421 ];... 
			[ 198 199 200 201 ];... 
			[ 197 198 199 200 201 202 203 ];... 
			[ 198 199 200 201 202 ];... 
			[ 198 199 200 201 ];... 
			[ 775 776 777 778 779 ];... 
			[ 418 419 420 421 422 423 424 ];... 
			[ 419 421 776 777 778 ];... 
			[ 108 109 ];... 
			[ 107 108 109 110 111 112 113 285 ];... 
			[ 109 110 111 ];... 
			[ 372 ];... 
			[ 19 20 48 76 ];... 
			[ 357 358 359 360 361 362 650 651 ];... 
			[ 359 360 650 651 ];... 
			[ 652 1093 1094 1095 1096 1097 ];... 
			[ 216 217 647 648 649 650 651 652 653 851 852 853 ];... 
			[ 416 417 518 519 520 521 522 523 524 525 526 527 528 529 ];... 
			[ 519 520 521 522 ];... 
			[ 41 42 43 44 45 46 715 ];... 
			[ 519 520 521 522 ];... 
			[ 508 509 865 1012 1013 ];... 
			[ 508 509 ];... 
			[ 509 ];... 
			[ 976 977 978 979 ];... 
			[ 975 976 977 978 979 980 981 982 ];... 
			[ 976 977 978 979 980 ];... 
			[ 976 977 978 979 ];... 
			}; 

	case{5} 
		channelsWithBadCols = [... 
			15; 31; 43; 49; 50; 51; 52; 53; 55; 56; 62; 69; 73; 77; ...
			78; 79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 999 1000 ];... 
			[ 285 ];... 
			[ 19 20 48 76 ];... 
			[ 620 621 622 623 624 625 626 ];... 
			[ 621 622 623 624 625 ];... 
			[ 622 623 624 ];... 
			[ 621 622 623 624 625 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 391 ];... 
			[ 548 549 ];... 
			[ 865 1012 1013 ];... 
			[ 361 362 363 364 365 ];... 
			[ 361 362 363 364 365 659 1038 ];... 
			[ 361 362 363 364 365 ];... 
			[ 360 361 362 363 364 365 366 ];... 
			}; 

	case{6} 
		channelsWithBadCols = [... 
			10; 21; 22; 23; 24; 27; 28; 31; 36; 39; 43; 45; 46; 48; ...
			50; 51; 53; 55; 56; 57; 58; 59; 60; 61; 62; 63; 64; 69; ...
			70; 71; 72; 73; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 888 ];... 
			[ 275 276 277 278 279 280 281 282 283 713 ];... 
			[ 278 279 280 281 713 ];... 
			[ 713 ];... 
			[ 279 280 281 282 283 712 713 714 715 716 ];... 
			[ 568 569 570 571 572 ];... 
			[ 569 570 ];... 
			[ 285 ];... 
			[ 453 454 455 ];... 
			[ 968 ];... 
			[ 19 20 48 76 ];... 
			[ 933 934 935 936 937 ];... 
			[ 935 936 ];... 
			[ 935 936 ];... 
			[ 168 169 170 ];... 
			[ 168 ];... 
			[ 416 417 ];... 
			[ 715 ];... 
			[ 652 ];... 
			[ 1075 1076 1077 1078 1079 1080 1081 1082 ];... 
			[ 1076 1077 1078 1079 1080 ];... 
			[ 1077 1078 ];... 
			[ 1076 1077 1078 1079 1080 ];... 
			[ 284 285 286 287 288 289 290 291 807 808 809 810 811 812 ];... 
			[ 285 286 391 806 807 808 809 810 811 812 813 ];... 
			[ 284 285 286 287 288 805 806 807 808 809 810 811 812 813 814 815 ];... 
			[ 284 285 286 287 288 806 807 808 809 810 811 812 813 ];... 
			[ 788 789 790 791 792 793 794 ];... 
			[ 788 789 790 791 792 793 ];... 
			[ 790 791 ];... 
			[ 788 789 790 791 792 793 794 ];... 
			[ 865 1012 1013 ];... 
			}; 

	case{7} 
		channelsWithBadCols = [... 
			1; 9; 10; 21; 22; 23; 24; 27; 31; 37; 41; 42; 43; 44; ...
			45; 46; 47; 48; 49; 53; 54; 55; 56; 58; 59; 60; 65; 66; ...
			67; 68; 69; 72; 73; 76; 78; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 1007 ];... 
			[ 455 ];... 
			[ 454 455 456 ];... 
			[ 457 ];... 
			[ 170 456 457 458 459 830 ];... 
			[ 455 456 457 458 459 460 461 462 463 464 829 830 831 832 833 ];... 
			[ 456 457 458 459 830 831 ];... 
			[ 978 ];... 
			[ 285 ];... 
			[ 224 225 ];... 
			[ 530 531 532 533 534 535 1039 1040 1041 ];... 
			[ 531 532 548 ];... 
			[ 19 20 48 76 547 548 549 550 551 1039 1040 1041 ];... 
			[ 532 549 1037 1038 1039 1040 1041 1042 1043 ];... 
			[ 310 311 312 313 685 686 687 688 689 690 691 ];... 
			[ 309 310 311 312 313 314 315 316 686 687 688 689 ];... 
			[ 310 311 312 313 ];... 
			[ 310 311 312 313 686 687 688 689 ];... 
			[ 125 ];... 
			[ 42 43 44 45 46 47 48 49 50 51 416 417 ];... 
			[ 44 45 46 47 48 49 50 890 891 892 ];... 
			[ 715 ];... 
			[ 44 45 46 47 48 49 50 ];... 
			[ 699 700 701 702 ];... 
			[ 697 698 699 700 701 702 703 704 705 706 707 ];... 
			[ 699 700 701 702 ];... 
			[ 819 820 821 822 823 824 825 826 827 828 ];... 
			[ 238 239 820 821 822 823 824 825 ];... 
			[ 234 235 236 237 238 239 240 241 242 ];... 
			[ 237 238 239 240 820 821 822 823 824 ];... 
			[ 874 875 876 ];... 
			[ 874 875 ];... 
			[ 865 1012 1013 1059 1060 1061 1062 1063 ];... 
			[ 1060 ];... 
			[ 409 410 ];... 
			}; 

	case{8} 
		channelsWithBadCols = [... 
			11; 22; 23; 24; 27; 31; 37; 43; 45; 46; 47; 48; 51; 53; ...
			55; 56; 57; 58; 59; 60; 62; 65; 73; 74; 82; 83; 84; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 470 471 472 473 ];... 
			[ 502 503 504 1057 ];... 
			[ 501 502 503 504 505 506 507 1055 1056 1057 1058 1059 ];... 
			[ 502 503 504 938 1057 1058 ];... 
			[ 1047 ];... 
			[ 285 ];... 
			[ 203 ];... 
			[ 19 20 48 76 ];... 
			[ 162 163 164 165 166 751 752 753 ];... 
			[ 750 751 752 753 754 ];... 
			[ 751 752 753 ];... 
			[ 164 751 752 753 ];... 
			[ 90 253 333 496 576 656 819 899 1062 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 452 453 454 455 456 457 458 ];... 
			[ 455 ];... 
			[ 454 455 ];... 
			[ 453 454 455 456 ];... 
			[ 391 ];... 
			[ 248 ];... 
			[ 865 1012 1013 ];... 
			[ 148 149 ];... 
			[ 663 664 665 ];... 
			[ 661 662 663 664 665 666 667 668 ];... 
			[ 663 664 665 ];... 
			}; 

	case{9} 
		channelsWithBadCols = [... 
			29; 30; 31; 39; 40; 41; 42; 43; 44; 45; 46; 47; 48; 49; ...
			50; 51; 52; 53; 55; 56; 61; 62; 63; 64; 65; 66; 67; 68; ...
			72; 73; 74; 81; 82; 83; 84; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 1018 1019 1020 ];... 
			[ 1017 1018 1019 1020 1021 ];... 
			[ 285 1018 1019 1020 ];... 
			[ 712 ];... 
			[ 310 311 ];... 
			[ 826 827 828 829 830 831 1098 1099 1100 ];... 
			[ 827 828 829 1096 1097 1098 1099 1100 1101 1102 ];... 
			[ 19 20 48 76 1100 ];... 
			[ 827 828 829 1098 1099 1100 ];... 
			[ 352 353 354 355 356 357 ];... 
			[ 355 408 ];... 
			[ 215 216 406 407 408 409 479 ];... 
			[ 353 354 355 356 408 ];... 
			[ 106 994 995 996 998 ];... 
			[ 106 869 870 871 996 997 998 ];... 
			[ 90 105 106 107 211 212 213 214 253 303 304 305 306 333 496 576 656 819 899 977 994 995 996 997 998 1062 ];... 
			[ 104 105 106 107 991 992 993 994 995 996 997 998 999 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 1038 1039 1040 1041 1042 1043 ];... 
			[ 391 1110 1111 1112 ];... 
			[ 1039 1040 1041 1109 1110 1111 1112 ];... 
			[ 1038 1039 1040 1041 1110 1111 1112 ];... 
			[ 733 734 735 736 737 ];... 
			[ 733 734 735 736 737 738 ];... 
			[ 733 734 735 736 737 ];... 
			[ 733 734 735 736 737 ];... 
			[ 507 508 509 675 676 677 678 ];... 
			[ 865 1012 1013 ];... 
			[ 716 717 ];... 
			[ 20 21 23 ];... 
			[ 19 20 21 22 23 24 25 ];... 
			[ 20 21 22 ];... 
			[ 20 21 23 ];... 
			}; 

	case{10} 
		channelsWithBadCols = [... 
			25; 26; 27; 28; 31; 33; 34; 35; 36; 37; 38; 43; 53; 55; ...
			56; 62; 65; 66; 68; 73; 74; 75; 76; 78; 81; 82; 84; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 830 831 832 833 834 ];... 
			[ 830 831 832 833 834 ];... 
			[ 1047 ];... 
			[ 826 827 828 829 830 831 832 833 834 835 836 837 ];... 
			[ 285 ];... 
			[ 247 248 249 250 ];... 
			[ 243 244 245 246 247 248 249 250 251 ];... 
			[ 247 248 249 ];... 
			[ 245 246 247 248 249 250 ];... 
			[ 826 827 828 829 830 ];... 
			[ 827 828 ];... 
			[ 19 20 48 76 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 391 ];... 
			[ 961 962 963 964 965 966 ];... 
			[ 963 ];... 
			[ 963 ];... 
			[ 865 1012 1013 1110 1111 1112 ];... 
			[ 1109 1110 1111 1112 ];... 
			[ 1111 1112 ];... 
			[ 1110 1111 1112 ];... 
			[ 1038 ];... 
			[ 507 508 509 ];... 
			[ 946 ];... 
			[ 944 945 946 947 948 962 963 964 ];... 
			}; 

	case{11} 
		channelsWithBadCols = [... 
			1; 4; 27; 31; 33; 34; 35; 36; 41; 42; 43; 44; 49; 50; ...
			51; 52; 53; 55; 56; 57; 61; 62; 63; 64; 68; 73; 74; 77; ...
			78; 79; 80; ]; 
		maskedSmearSpilledChargeCols = {...
			[ 755 756 757 758 ];... 
			[ 756 757 ];... 
			[ 1047 ];... 
			[ 285 ];... 
			[ 843 844 845 867 868 ];... 
			[ 249 540 541 842 843 844 845 846 866 867 868 869 ];... 
			[ 843 844 845 867 868 ];... 
			[ 843 844 845 867 868 ];... 
			[ 1047 1048 1049 1050 1052 1053 1054 1055 1056 1057 ];... 
			[ 952 953 954 959 1048 1049 1053 1054 1055 1056 ];... 
			[ 19 20 48 76 952 953 954 955 958 959 960 961 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 ];... 
			[ 952 953 954 958 959 960 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 ];... 
			[ 608 609 610 631 632 633 ];... 
			[ 847 881 ];... 
			[ 845 846 847 848 849 850 880 881 882 883 884 ];... 
			[ 847 848 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 156 ];... 
			[ 133 134 164 346 363 364 365 ];... 
			[ 132 133 134 135 153 154 155 391 ];... 
			[ 132 133 134 135 136 137 152 153 154 155 156 157 ];... 
			[ 133 134 135 153 154 155 363 ];... 
			[ 286 ];... 
			[ 865 1012 1013 ];... 
			[ 411 412 413 ];... 
			[ 732 733 ];... 
			[ 554 731 732 733 734 735 755 756 ];... 
			[ 552 553 554 555 556 557 732 733 734 ];... 
			[ 554 555 732 733 ];... 
			}; 

	case{12} 
		channelsWithBadCols = [... 
			27; 31; 41; 43; 48; 53; 55; 56; 61; 62; 63; 64; 73; 78; ...
			]; 
		maskedSmearSpilledChargeCols = {...
			[ 1047 ];... 
			[ 285 ];... 
			[ 381 382 383 ];... 
			[ 19 20 48 76 ];... 
			[ 618 ];... 
			[ 416 417 ];... 
			[ 715 979 ];... 
			[ 652 ];... 
			[ 175 176 177 178 ];... 
			[ 176 177 178 391 484 485 486 487 488 1029 1030 1031 ];... 
			[ 176 177 178 483 484 485 486 487 488 489 ];... 
			[ 174 175 176 177 178 179 180 484 485 486 487 ];... 
			[ 865 1012 1013 1014 ];... 
			[ 1038 ];... 
			}; 

	otherwise
		channelsWithBadCols = [];
		maskedSmearSpilledChargeCols = {};
end 
ichannel = find(channelsWithBadCols == channel); 

if ~isempty(ichannel) 
	maskedSmearColsToExcludeDueToSpilledCharge = sort(maskedSmearSpilledChargeCols{ichannel}); 
else 
	maskedSmearColsToExcludeDueToSpilledCharge =[]; 
end 

return; 
