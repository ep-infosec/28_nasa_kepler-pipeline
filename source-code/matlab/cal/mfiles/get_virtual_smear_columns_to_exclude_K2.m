function [virtualSmearColsToExcludeDueToSpilledCharge, channelsWithBadCols] = ...
    get_virtual_smear_columns_to_exclude_K2(campaign, channel)
% [virtualSmearColsToExcludeDueToSpilledCharge, channelsWithBadCols] = ...
%    get_virtual_smear_columns_to_exclude_K2(campaign, channel)
% Function to extract the 1-based CCD column indices where the virtual smear is
% corrupted by spilled charge from a saturated star. There is a set of
% columns for each channel (possibly empty) for each campaign.
%
% Inputs:
%   campaign: K2 campaign number 0-?
%   channel: 1-84 focal plane channel number
%
% Outputs:
%   virtualSmearColsToExcludeDueToSpilledCharge: column array of 1-based
%   column numbers to exclude, possibly empty
%
% autogenerated by auto_generate_cal_bad_smear_table_k2.m
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% NASA acknowledges the SETI Institute's primary role in authoring and
% producing the Kepler Data Processing Pipeline under Cooperative
% Agreement Nos. NNA04CC63A, NNX07AD96A, NNX07AD98A, NNX11AI13A,
% NNX11AI14A, NNX13AD01A & NNX13AD16A.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
 


switch campaign
	case{0} 
		channelsWithBadCols = [... 
			9; 10; 12; 23; 33; 48; 54; 57; 60; 61; 65; 66; 67; 68; ...
			73; 75; 76; 84; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 1059 1060 1061 ];... 
			[ 1058 1059 1060 1061 1062 ];... 
			[ 1059 1060 1061 ];... 
			[ 469 470 471 ];... 
			[ 164 165 166 168 169 170 ];... 
			[ 230 235 236 ];... 
			[ 932 933 934 936 937 938 939 ];... 
			[ 451 452 ];... 
			[ 450 451 452 453 455 456 ];... 
			[ 1035 1036 1037 ];... 
			[ 583 584 758 759 ];... 
			[ 581 582 583 584 585 756 757 758 759 760 ];... 
			[ 1103 1104 1105 ];... 
			[ 583 584 758 759 ];... 
			[ 665 666 ];... 
			[ 665 666 ];... 
			[ 664 665 666 667 668 ];... 
			[ 960 961 962 ];... 
			}; 

	case{1} 
		channelsWithBadCols = [... 
			9; 10; 12; 53; 54; 55; 56; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 790 791 792 ];... 
			[ 371 372 373 790 791 792 ];... 
			[ 790 791 792 ];... 
			[ 180 181 182 183 184 ];... 
			[ 179 180 181 182 183 184 185 ];... 
			[ 180 181 182 183 184 ];... 
			[ 178 179 180 181 182 183 184 185 186 ];... 
			}; 

	case{2} 
		channelsWithBadCols = [... 
			24; 37; 38; 43; 53; 54; 55; 56; 64; 65; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 283 ];... 
			[ 122 123 ];... 
			[ 121 122 123 124 125 126 170 171 ];... 
			[ 570 571 572 ];... 
			[ 861 862 863 ];... 
			[ 860 861 862 863 864 ];... 
			[ 861 862 863 864 ];... 
			[ 860 861 862 863 864 865 ];... 
			[ 1032 1033 ];... 
			[ 820 821 ];... 
			}; 

	case{3} 
		channelsWithBadCols = [... 
			33; 39; 43; 47; 51; 52; 61; 62; 63; 64; 77; 78; 79; 80; ...
			]; 
		virtualSmearSpilledChargeCols = {...
			[ 90 91 92 93 ];... 
			[ 143 144 145 146 ];... 
			[ 166 167 168 ];... 
			[ 362 ];... 
			[ 893 894 895 896 ];... 
			[ 894 ];... 
			[ 416 417 418 1044 1045 1046 ];... 
			[ 415 416 417 418 419 420 1044 1045 1046 ];... 
			[ 1043 1044 1045 1046 1047 ];... 
			[ 416 417 418 1044 1045 1046 ];... 
			[ 695 696 697 698 699 700 701 702 ];... 
			[ 696 697 698 699 ];... 
			[ 698 ];... 
			[ 696 697 698 699 700 ];... 
			}; 

	case{4} 
		channelsWithBadCols = [... 
			1; 2; 4; 13; 14; 15; 16; 40; 47; 49; 50; 51; 52; 73; ...
			75; 76; 81; 82; 83; 84; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 239 240 241 242 243 244 245 ];... 
			[ 240 241 242 ];... 
			[ 240 241 242 ];... 
			[ 229 230 231 232 ];... 
			[ 228 229 230 231 232 233 ];... 
			[ 229 230 231 232 ];... 
			[ 229 230 231 232 ];... 
			[ 274 ];... 
			[ 841 842 ];... 
			[ 320 321 322 323 324 ];... 
			[ 322 323 ];... 
			[ 671 688 689 929 930 ];... 
			[ 96 97 98 670 671 672 925 926 927 928 929 930 931 ];... 
			[ 799 800 ];... 
			[ 799 800 ];... 
			[ 797 798 799 800 801 802 ];... 
			[ 323 324 325 ];... 
			[ 322 323 324 325 326 ];... 
			[ 324 ];... 
			[ 323 324 325 ];... 
			}; 

	case{5} 
		channelsWithBadCols = [... 
			35; 46; 47; 48; 77; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 879 880 881 882 ];... 
			[ 874 875 ];... 
			[ 31 873 874 875 876 877 ];... 
			[ 874 875 ];... 
			[ 53 ];... 
			}; 

	case{6} 
		channelsWithBadCols = [... 
			27; 82; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 291 292 ];... 
			[ 170 171 172 173 ];... 
			}; 

	case{7} 
		channelsWithBadCols = [... 
			22; 24; 54; 55; 56; 62; 69; 70; 71; 72; 77; 78; 83; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 541 ];... 
			[ 283 ];... 
			[ 454 455 ];... 
			[ 452 453 454 455 456 457 ];... 
			[ 454 455 652 ];... 
			[ 391 ];... 
			[ 625 626 ];... 
			[ 624 625 626 ];... 
			[ 625 626 ];... 
			[ 625 ];... 
			[ 53 ];... 
			[ 1038 ];... 
			[ 660 661 ];... 
			}; 

	case{8} 
		channelsWithBadCols = [... 
			1; 2; 4; 42; 43; 44; 59; 60; 65; 66; 68; 77; 78; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 1109 1110 1111 1112 ];... 
			[ 1110 1111 1112 ];... 
			[ 1110 1111 1112 ];... 
			[ 356 357 ];... 
			[ 355 356 357 358 ];... 
			[ 356 357 ];... 
			[ 861 862 863 864 865 ];... 
			[ 862 863 ];... 
			[ 243 244 245 246 247 ];... 
			[ 244 245 ];... 
			[ 244 245 ];... 
			[ 53 ];... 
			[ 659 ];... 
			}; 

	case{9} 
		channelsWithBadCols = [... 
			24; 31; 32; 49; 51; 57; 61; 63; 64; 77; 78; 79; 80; 81; ...
			82; 84; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 283 ];... 
			[ 780 ];... 
			[ 801 ];... 
			[ 711 ];... 
			[ 993 ];... 
			[ 768 ];... 
			[ 513 514 515 516 ];... 
			[ 514 515 516 ];... 
			[ 513 514 515 516 517 518 ];... 
			[ 53 ];... 
			[ 551 552 553 596 597 598 1038 ];... 
			[ 550 551 552 553 554 555 ];... 
			[ 551 552 553 ];... 
			[ 393 1021 1022 1023 ];... 
			[ 1020 1021 1022 1023 1024 ];... 
			[ 1021 1022 ];... 
			}; 

	case{10} 
		channelsWithBadCols = [... 
			22; 23; 24; 61; 77; 78; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 997 998 999 ];... 
			[ 996 997 998 999 1000 1001 ];... 
			[ 997 998 999 ];... 
			[ 806 807 808 ];... 
			[ 53 ];... 
			[ 659 ];... 
			}; 

	case{11} 
		channelsWithBadCols = [... 
			13; 14; 22; 24; 32; 35; 36; 41; 43; 44; 58; 63; 77; 78; ...
			]; 
		virtualSmearSpilledChargeCols = {...
			[ 137 ];... 
			[ 775 776 ];... 
			[ 541 ];... 
			[ 283 ];... 
			[ 1044 1045 1046 1047 ];... 
			[ 857 858 859 860 861 862 888 889 890 891 892 1037 1038 ];... 
			[ 1036 1037 1038 1039 ];... 
			[ 347 348 650 ];... 
			[ 160 161 162 163 164 165 347 ];... 
			[ 345 346 347 348 349 350 ];... 
			[ 154 155 156 157 158 167 168 169 ];... 
			[ 89 90 104 ];... 
			[ 53 ];... 
			[ 659 ];... 
			}; 

	case{12} 
		channelsWithBadCols = [... 
			24; 71; 77; 78; 79; 80; ]; 
		virtualSmearSpilledChargeCols = {...
			[ 283 ];... 
			[ 125 ];... 
			[ 53 188 189 ];... 
			[ 187 188 189 190 659 ];... 
			[ 187 188 189 190 ];... 
			[ 186 187 188 189 190 191 192 ];... 
			}; 

	otherwise
		channelsWithBadCols = [];
		virtualSmearSpilledChargeCols = {};
end 
ichannel = find(channelsWithBadCols == channel); 

if ~isempty(ichannel) 
	virtualSmearColsToExcludeDueToSpilledCharge = sort(virtualSmearSpilledChargeCols{ichannel}); 
else 
	virtualSmearColsToExcludeDueToSpilledCharge =[]; 
end 

return; 
