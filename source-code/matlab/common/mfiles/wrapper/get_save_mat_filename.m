function filename = get_save_mat_filename(filenamePrefix, varargin)
% filename = get_save_mat_filename(filenamePrefix, varargin)
%
% Returns the latest mat file that was generated by make_save_mat_filename
% with the given arguments (filenamePrefix, varargin).  
%
% 
% Copyright 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% 
% This file is available under the terms of the NASA Open Source Agreement
% (NOSA). You should have received a copy of this agreement with the
% Kepler source code; see the file NASA-OPEN-SOURCE-AGREEMENT.doc.
% 
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY,
% INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE
% WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM
% INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
% FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM
% TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER,
% CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT
% OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY
% OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.
% FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES
% REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE,
% AND DISTRIBUTES IT "AS IS."
% 
% Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
% SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT'S USE OF
% THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES,
% EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM
% PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT
% SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED
% STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
% PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT'S SOLE
% REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL
% TERMINATION OF THIS AGREEMENT.
%
    import gov.nasa.kepler.hibernate.dbservice.ConfigurationServiceFactory;
    
    if nargin < 1
        error('get_save_mat_filename: Must have one or more input arguments');
    end
    

    % Get the save directory from kepler.properties sbt.wrapper.cache-dir
    % variable.  Verify the entry exists and that it is a valid directory:
    %
    saveDirectory = char(ConfigurationServiceFactory.getInstance.getString('sbt.wrapper.cache-dir'));
    if isempty(saveDirectory)
        error('MATLAB:SBT:wrapper:get_save_mat_filename', ...
            'Kepler.properties entry sbt.wrapper.cache is set, but not sbt.wrapper.cache-dir. The directory to load cached data from must be defined in sbt.wrapper.cache-dir. Exiting.');
    end
    isValidDirectory = (7 == exist(saveDirectory, 'dir'));
    if ~isValidDirectory
        error('MATLAB:SBT:wrapper:get_save_mat_filename', 'Directory "%s" does not exist. Exiting.', saveDirectory);
    end
    
    currentFilename = make_save_mat_filename_prefix(saveDirectory, filenamePrefix, varargin{:});
    slashLocationsInFilename = regexp(currentFilename, '/');
    directory = currentFilename(1:slashLocationsInFilename(end));
    
    matFileSearchString = [currentFilename ':*.mat'];
    matFilesInfo = dir(matFileSearchString);
    matFiles = sort({matFilesInfo.name});
    if isempty(matFiles)
        error('get_save_mat_filename: No files match seach string %s', matFileSearchString);
    end
    filename = fullfile(directory, matFiles{end});
return
